{
  "hash": "e869d41fc0cdade92441e2afee792a5f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2a - DataVis Makeover of Take home ex 1a\"\ndate: May 5, 2024\ndate-modified: \"last-modified\"\nauthor: \"Imran Ibrahim\"\ntoc: true\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\n# 1. Overview\n\nIn the [previous Take-home Exercise](https://akalestale.netlify.app/take-home_ex/take-home_ex01/take-home_ex01), we utilised Exploratory Data Analysis methods and ggplot functions to uncover the distribution of performance among Singaporean students in mathematics, reading, and science. We also explored the relationships between these performance metrics and factors such as schools, gender, and socioeconomic status, leveraging data from the PISA Student Questionnaire Survey.\n\nIn this exercise, the objective is to enhance the original visualisations I have created in the previous exercise. \\\n\\\nHere, I will reference my classmate's work from my Visual Analytics class, term Jan 2024. **All credit belongs to her for the exceptional effort, creativity and expertise** displayed in the Data Viz makeover exercise. \\\n\\\nThe intention of this post is not to copy a better piece of work, but rather to learn from it, and understand the best practices and thought processes employed by someone who has inspired me.\n\n# 2. Getting Started\n\n## 2.1 Loading packages\n\nThe following code chunk uses `p_load()` of [**pacman**](https://rpubs.com/akshaypatankar/594834) package to check if tidyverse packages are installed in the computer. If they are, the libraries will be called into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, haven, patchwork, \n               scales, ggridges, ggdist, \n               ggtext, ggpubr, intsvy,\n               waffle, hrbrthemes)\n```\n:::\n\n\n## 2.2 PISA Data - Importing data set\n\nThe data prep steps can be referenced from my previous exercise 1a. Here I will just load in the prepared sub set of the original data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_SG <- read_rds(\"data/stu_SG.rds\")\n```\n:::\n\n\n## 2.3 Data Wrangling\n\n`pisa.mean.pv()` function of the [**instvy**](https://daniel-caro.com/r-intsvy) package is used to obtain the mean plausible values out of the 10 plausible values provided in the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMath_mean_SG <- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"MATH\"), by=\"CNT\", data=stu_SG)\n\nRead_mean_SG <- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"READ\"), by=\"CNT\", data=stu_SG)\n\nSCIE_mean_SG <- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"SCIE\"), by=\"CNT\", data=stu_SG)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMath_mean_SG\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  CNT Freq   Mean s.e.    SD  s.e\n1 SGP 6606 574.66 1.23 102.8 0.91\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nRead_mean_SG\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  CNT Freq   Mean s.e.     SD  s.e\n1 SGP 6606 542.55 1.87 105.89 1.15\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nSCIE_mean_SG\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  CNT Freq   Mean s.e.    SD s.e\n1 SGP 6606 561.43 1.33 99.09 1.1\n```\n\n\n:::\n:::\n\n\nThe function generates descriptive statistics for each subject, including the mean, frequency, standard error, and standard deviation.\n\n# 3. DataVis Makeover\n\n## 3.1 Distribution of Subject scores\n\nThe code chunk below is first used to calculate the mean PV of each subject using PV1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate mean values for 3 subjects\nmean_m <- round(mean(stu_SG$PV1MATH),0)\nmean_r <- round(mean(stu_SG$PV1READ),0)\nmean_s <- round(mean(stu_SG$PV1SCIE),0)\n```\n:::\n\n\nThe remake features similar histograms with trio of colours to represent each of the subject.\n\n-   Using `element_markdown()` of the **ggtext** package within `theme()` enables colour-coding of the graph title. This is used in conjunction with `span style='color:'` to specify the colour hexcode of choice.\n\n-   `limits()` is explicitly declared inside `scale_x_continuous()` to ensure the range of x-axis used is consistent throughout.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Histogram for Math scores\nhist_m <- \n  ggplot(\n    stu_SG, \n    aes(x = PV1MATH)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#629182\",\n    alpha=0.4,\n  ) +\n  \n  # Sets same breaks on the x-axis\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n  \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_m),\n    colour=\"#3E5058\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_m-50, \n    y = 870,\n    label = paste0(\"Mean: \", mean_m),\n    color=\"#3E5058\",\n    size = 3,\n  ) + \n  \n  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Histogram for Reading scores\nhist_r <- \n  ggplot(\n    stu_SG, \n    aes(x = PV1READ)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#EF6174\",\n    alpha=0.4,\n  ) +\n  \n  scale_x_continuous(\n    # Sets same breaks on the x-axis\n    breaks = scales::pretty_breaks(n = 5),\n  \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_r),\n    colour=\"#3E5058\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_r-50, \n    y = 870,\n    label = paste0(\"Mean: \", mean_r),\n    color=\"#3E5058\",\n    size = 3,\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhist_s <- \n  ggplot(\n    stu_SG, \n    aes(x = PV1SCIE)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#FEBc44\",\n    alpha= 0.4,\n  ) +\n\n  scale_x_continuous(\n    # Sets same breaks on the x-axis\n    breaks = scales::pretty_breaks(n = 5),\n  \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_s),\n    colour=\"#3E5058\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_s-50, \n    y = 870,\n    label = paste0(\"Mean: \", mean_s),\n    color=\"#3E5058\",\n    size = 3,\n  ) +  \n  labs(x = \"Scores\", y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    axis.line.x = element_line(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\np1 <- (hist_m / hist_r)\np1 / hist_s  + \n  plot_layout(heights = c(1,1,1)) +\n  plot_annotation(title=\"Mean scores in <span style='color: #629182;'>Math</span> > <span style='color: #EF6174;'>Reading</span> and <span style='color: #FEBc44;'>Science</span>.\", \n                  subtitle = \"Normal distribution across all subjects.\",\n                  theme=theme(plot.title = element_markdown(hjust = 0, face=\"bold\"),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2a_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nThe following objectives were achieved from the revamp:-\n\n**Clarity**\n\n1.  **Graph title:** The title describes accurately the primary observation derived from the graph. The use of colour-coded words for each subject eliminates the need for a legend.\n\n2.  **x-axis tick marks and scale:** The histograms are consolidated into a single column with a share x-axis. It features aligned bin numbers across each subject to improve clarity and comparability.\n\n3.  **Mean Line:** The mean is calculated using PV1 values for each subject to ensure a more precise benchmarking process that contributes to the graph’s accuracy.\n\n**Aesthetic**\n\n4.  **Annotation placement:** The move of the mean line’s annotation to the top enhances the overall view of the plot and avoids obstruction.\n\n## 3.2 Relationship between Scores and School ID\n\nThis remake was inspired by [Tobias Stalder’s submission for TidyTuesday](https://twitter.com/toeb18/status/1480174139377917953).\n\nFirstly, `as.character()` is used to convert the *SchID* variable from numeric to categorical data type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert School ID to character data type\n\nstu_SG <- stu_SG %>%\n  mutate(CNTSCHID = as.character(CNTSCHID))\n```\n:::\n\n\nUsing `n_distinct` we can identify that there are 164 unique school IDs in our data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_distinct(stu_SG$CNTSCHID)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 164\n```\n\n\n:::\n:::\n\n\nInstead of showing all 164 schools, visualising the top 5 and bottom 5 results by subject performance would be more than sufficient to convey the intended message.\n\nThe below code serves the following purpose:\n\n-   `group_by()`: is first used to group all the rows with the same School ID together.\n\n-   `summarize()`, `count = n()` and `mean()`: This summarises the grouped data, calculating the count of observations within each school and the overall mean scores for each subject across all schools.\n\n-   `dense_rank(avg_sci) <= 5 and dense_rank(desc(avg_sci)) <= 5` are then used filter the top 5 and bottom 5 schools based on the average subject scores.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nstu_SG_schools <- \n  stu_SG %>% \n  group_by(CNTSCHID) %>% \n  mutate(avg_math = mean(c_across(PV1MATH), na.rm=TRUE),\n         avg_read = mean(c_across(PV1READ), na.rm=TRUE),\n         avg_sci = mean(c_across(PV1SCIE), na.rm=TRUE)) %>% \n  summarize(Count = n(),\n            avg_math = mean(avg_math, na.rm = TRUE),\n            avg_read = mean(avg_read, na.rm = TRUE),\n            avg_sci = mean(avg_sci, na.rm = TRUE))  \n\nstu_SG_schools_m <-\n  stu_SG_schools %>% \n  filter(dense_rank(avg_math) <= 5 | dense_rank(desc(avg_math)) <= 5)\n\nstu_SG_schools_r <-\n  stu_SG_schools %>% \n  filter(dense_rank(avg_read) <= 5 | dense_rank(desc(avg_read)) <= 5)\n\nstu_SG_schools_s <-\n  stu_SG_schools %>% \n  filter(dense_rank(avg_sci) <= 5 | dense_rank(desc(avg_sci)) <= 5)\n```\n:::\n\n\nSince the original plot aimed to compare average subject scores of each school, the remade version proposes the use of a bar plot to visualise ranking of the school subject averages.\n\nThe remade version showcases a lollipop plot, akin to a barplot, where the traditional bar is transformed into a combination of a line using `geom_segment()` and a dot with `geom_point()`. This visualisation illustrates the relationship between a numeric variable (average subject scores per school) and a categorical variable (school).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlolly_m <-\n  ggplot(stu_SG_schools_m, \n       aes(x = avg_math, \n           y = reorder(CNTSCHID, avg_math))) +\n  \n  geom_segment(aes(x=0, \n                 xend=avg_math, \n                 y=CNTSCHID, \n                 yend=CNTSCHID),\n             color= if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")\n                            ),\n             alpha = 0.5,\n             linewidth= 4.2)+\n  \n  geom_point(color= if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")),\n             alpha = 0.8,\n             size = 3.5)+            \n  \n  geom_text(data = stu_SG_schools_m,\n             aes(label = paste(CNTSCHID), \n                 x = 130, \n                 y = CNTSCHID),\n             color = if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n             size = 3,\n            fontface= if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\",\n                             \"plain\")) +\n  \n  # Data callout\n  geom_text(aes(label=round(avg_math,0)\n                ),\n            color=if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n            size=3,\n            nudge_x= 30,   # move it to the right of the point\n            hjust= 0, # left justify\n            fontface= if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\", \n                             \"plain\")) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_m),\n    colour=\"#7161f0\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_m + 145, \n    y = 3.5,\n    label = paste0(\"Mean:\\n\", mean_m),\n    color=\"#7161f0\",\n    size = 3.2,\n  ) +  \n  scale_x_continuous(\n\n    # Set same limits for plots for consistency\n    limits = c(0,800), \n  ) +  \n  theme_minimal()+\n  labs(\n    x = \"Math\",\n    y = NULL\n  ) +\n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_blank(),\n    axis.title = element_text(face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.grid = element_blank()\n  )  \n\nlolly_r <-\n  ggplot(stu_SG_schools_r, \n       aes(x = avg_read, \n           y = reorder(CNTSCHID, avg_read))) +\n  \n  geom_segment(aes(x=0, \n                 xend=avg_read, \n                 y=CNTSCHID, \n                 yend=CNTSCHID),\n             color= if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")\n                            ),\n             alpha = 0.5,\n             linewidth= 4.2)+\n  \n  geom_point(color= if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")),\n             alpha = 0.8,\n             size = 3.5)+            \n  \n  geom_text(data = stu_SG_schools_r,\n             aes(label = paste(CNTSCHID), \n                 x = 130, \n                 y = CNTSCHID),\n             color = if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n             size = 3,\n            fontface= if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\",\n                             \"plain\")) +\n  \n  # Data callout\n  geom_text(aes(label=round(avg_read,0)\n                ),\n            color=if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n            size=3,\n            nudge_x= 30,   # move it to the right of the point\n            hjust= 0, # left justify\n            fontface= if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\", \n                             \"plain\")) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_r),\n    colour=\"#7161f0\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_r + 145, \n    y = 3.5,\n    label = paste0(\"Mean:\\n\", mean_r),\n    color=\"#7161f0\",\n    size = 3.2,\n  ) +  \n  scale_x_continuous(\n\n    # Set same limits for plots for consistency\n    limits = c(0,800), \n  ) +  \n  theme_minimal()+\n  labs(\n    x = \"Reading\",\n    y = NULL\n  ) +\n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_blank(),\n    axis.title = element_text(face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.grid = element_blank()\n  ) \n\nlolly_s <-\n  ggplot(stu_SG_schools_s, \n       aes(x = avg_sci, \n           y = reorder(CNTSCHID, avg_sci))) +\n  \n  geom_segment(aes(x=0, \n                 xend=avg_sci, \n                 y=CNTSCHID, \n                 yend=CNTSCHID),\n             color= if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")\n                            ),\n             alpha = 0.5,\n             linewidth= 4.2)+\n  \n  geom_point(color= if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")),\n             alpha = 0.8,\n             size = 3.5)+            \n  \n  geom_text(data = stu_SG_schools_s,\n             aes(label = paste(CNTSCHID), \n                 x = 130, \n                 y = CNTSCHID),\n             color = if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n             size = 3,\n            fontface= if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\",\n                             \"plain\")) +\n  \n  # Data callout\n  geom_text(aes(label=round(avg_sci,0)\n                ),\n            color=if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n            size=3,\n            nudge_x= 30,   # move it to the right of the point\n            hjust= 0, # left justify\n            fontface= if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\", \n                             \"plain\")) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_s),\n    colour=\"#7161f0\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_s + 145, \n    y = 3.5,\n    label = paste0(\"Mean:\\n\", mean_s),\n    color=\"#7161f0\",\n    size = 3.2,\n  ) +  \n  scale_x_continuous(\n\n    # Set same limits for plots for consistency\n    limits = c(0,800), \n  ) +  \n  theme_minimal()+\n  labs(\n    x = \"Science\",\n    y = NULL\n  ) +\n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_blank(),\n    axis.title = element_text(face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.grid = element_blank()\n  ) \n\nlolly_m + lolly_r + lolly_s +\n  plot_layout(widths=c(1.2,1,1)) +\n  plot_annotation(title=\"Uneven distribution of scores across schools\",\n                  subtitle=\"School <span style='color: #69aebf;'>70200003</span> has one of the highest mean scores across all subjects,<br> while schools <span style='color: #dc7068;'>70200056, 70200115, 70200149</span> remained at the bottom consistently.\",\n                  theme=theme(plot.title = element_markdown(hjust = 0, face=\"bold\"),\n                              plot.subtitle = element_markdown(hjust = 0),\n                              plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                              panel.border = element_blank()))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2a_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nThe following objectives were achieved from the revamp:-\n\n**Clarity**\n\n1.  **Use of a lollipop plot:** The lollipop plot is a straightforward yet effective visualisation of the top and bottom average scores by school. The schools are sorted in descending order based on their average scores for each subject to enhance interpretability.\n\n2.  **Colour:** The use of colours, with blue highlighting consistently high-performing schools and pink delineating consistently low-performing schools across subjects, serves to direct the reader’s attention towards salient findings.\n\n3.  **Mean line:** The inclusion of a mean line, along with annotations, facilitates easy comparison of school performance against the average score for each subject across all schools.\n\n4.  **Chart labelling**: Each point in the graph is annotated, enhancing overall clarity and providing additional context to the visual representation.\n\n**Aesthetic**\n\n5.  **Removal of y-axis**: The y-axis labels (School IDs) are labelled within the bar for more efficient use of space since 3 plots are combined.\n\n## 3.3 Relationship between Gender and Scores\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ndp_long <- \n  stu_SG %>% \n  select(ST004D01T, PV1MATH, PV1READ, PV1SCIE) %>% \n  pivot_longer(cols = starts_with(\"PV1\"),\n               names_to = \"subject\",\n               names_prefix=\"PV1\",\n               values_to=\"Score\") %>% \n  mutate(Gender=(recode(ST004D01T, '1'=\"Female\", \n                        '2'=\"Male\"))) %>% \n  select(-ST004D01T) %>% \n  mutate(subject=(recode(subject, \n                            'MATH'=\"Math\",\n                            'READ'=\"Reading\",\n                            'SCIE'='Science')))\n\nggplot(dp_long, \n       aes(x = Score, \n           y = Gender, \n           fill = Gender, \n           color = Gender)) +\n  geom_density_ridges(\n    alpha = 0.5,\n    quantile_lines = TRUE,\n    quantiles = 2,\n    scale = 1.5,\n    #bandwidth= 0.1,\n    rel_min_height = 0.01\n  ) +\n  theme_ridges() +\n  scale_fill_manual(values =\n                      c(\"#f27279\",\n                        \"#73b2c4\")) +\n  scale_color_manual(values =\n                      c(\"#f27279\",\n                        \"#73b2c4\")) +  \n  facet_wrap(~ subject, ncol=1)+\n  scale_x_continuous(\n    name = \"Scores\",\n    expand = c(0, 0)\n  ) +  \n  scale_y_discrete(expand = expansion(add= c(0.05, 1.8)))+\n\n  geom_text(\n   data = data.frame(x = 620, y = 1.5, subject = \"Math\", Gender = \"Female\", label = \"Median\"),\n   aes(x = x,\n       y = y,\n       label = label),\n    color = \"red\",\n    size = 3,\n   fontface = \"italic\"\n    ) +      \n  \n  labs(x = \"<b>Scores</b>\",\n       y = \"\",\n       title=\"Gaps in academic achievement between genders.\",\n       subtitle=\"<b><span style='color: #73b2c4;'>Male</span></b> students have higher median scores in Math and Science than <b><span style='color: #f27279;'>female</b></span> students.\") +\n  guides(fill=FALSE) +\n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 9, color = \"#a6a6a6\"),\n    \n    axis.text.x = element_text(size = 9, color = \"#a6a6a6\"),\n    axis.title.x = element_markdown(size = 10, color = \"#a6a6a6\", hjust= 0.5),\n    axis.line.x = element_line(color = \"#a6a6a6\"), \n    axis.ticks.x = element_line(color = \"#a6a6a6\"),\n    panel.grid = element_blank(),\n    plot.title = element_markdown(hjust=0),\n    plot.subtitle = element_markdown(hjust = 0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    strip.background = element_rect(color=\"#ecebeb\"),\n    strip.switch.pad.grid = unit(2, \"in\"),\n    strip.text = element_text(size = 9.5, \n                              color =\"#202120\",\n                              margin = unit(rep(4, 4), \"pt\"))\n    )  \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2a_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThe revamped version retains the use of density plots to compare the distributions of subject scores between genders, with vertical lines showing the median.\n\nThe following objectives were achieved from the revamp:-\n\n**Clarity**\n\n1.  **Use of colours:** In this version, colours are used to differentiate between the 2 genders. This colour scheme extends to the plot title, establishing a clear connection between the key finding in the title and the plots.\n\n2.  **Median line:** The `quantile_lines` argument is introduced to `geom_density_ridges()`, allowing control over the number of lines to represent quantiles. Setting the quantiles argument to 2 divides each density plot in half, effectively highlighting the median. Additionally, an annotation is included to provide context for the line’s significance.\n\n3.  **Consistent x-axis:** Through the use of `facet_wrap()`, the graph is divided into individual sections for the three subjects. Importantly, the x-axis maintains a consistent range/scale throughout, aiding in distinguishing differences across subjects. For instance, the width of the density plots highlights that the range of scores for Science for both genders is notably smaller compared to the other two subjects.\n\n**Aesthetics**\n\n4.  **Muted labels:** The axes are in muted grey tones to ensure that the reader’s focus remains on the graph itself without being distracted by the axes labels.\n\n## 3.4 Relationship between Scores and Socioeconomic status of students\n\nThe source of inspiration came from [this blog](https://jmablog.com/post/astronaut-mission-length-longest-v-average/).\n\nThe code chunk below assigns a quartile classification to the variable *ESCS* to create 4 roughly equal-sized groups, recodes the variables to more intuitive categories, and finally orders the variables as socio-economic levels increase.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_SG <- stu_SG %>%\n  mutate(ESCS = ntile(ESCS, 4), .after = ESCS) %>%\n  \n  mutate(ESCS = recode(ESCS,\n                       `1` = \"Highly Disadvantaged\",\n                       `2` = \"Disadvantaged\",\n                       `3` = \"Advantaged\",\n                       `4` = \"Highly Advantaged\")) %>%\n  \n  mutate(ESCS = factor(ESCS, \n                levels = c(\"Highly Disadvantaged\", \"Disadvantaged\", \n                        \"Advantaged\", \"Highly Advantaged\"),\n                ordered = TRUE)) \n```\n:::\n\n\nThe following code chunk prepares the dataset for plotting using `pivot_longer()` to reshape the data by converting multiple columns into 2 columns. The processed data is then grouped by ECSC category and subject. For each group, it calculates the mean score using the `summarise()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nbar_escs <-\n  stu_SG %>% \n  drop_na(ESCS) %>% \n  select(ESCS, PV1MATH, PV1READ, PV1SCIE) %>% \n  pivot_longer(cols = starts_with(\"PV1\"),\n               names_to = \"subject\",\n               names_prefix=\"PV1\",\n               values_to=\"score\") %>% \n  mutate(subject = recode(subject,\n                       `MATH` = \"Math\",\n                       `READ` = \"Reading\",\n                       `SCIE` = \"Science\")) \n  \nmean_escs <- \n  bar_escs %>% \n  group_by(ESCS, subject) %>% \n  summarise(mean = mean(score, na.rm=TRUE)) %>% \n  ungroup() %>% \n  mutate(total_avg = if_else(subject==\"Math\", mean_m, \n                            if_else(subject==\"Reading\", mean_r,\n                                    mean_s)))\n```\n:::\n\n\nThe remade strip plot shows the range, density, and central tendencies of each socio-economic level faceted by subject. By adding a low alpha value `geom_point()`, the strip plot is able to highlight the density and range of scores. The purple points refer to the mean of each subject at a socio-economic level. Lastly, a mean line indicating the overall subject-level average is added for comparison.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggplot(bar_escs,\n             aes(x = ESCS, y = score)) +\n  coord_flip(clip = \"off\") +\n  geom_point(size = 3, \n             alpha = 0.1,\n             color=\"#3E5058\") +\n  geom_hline(data = mean_escs,\n             aes(yintercept = total_avg),\n             color = \"#c71e1d\",\n             size=1) +  \n  facet_wrap(~ subject, nrow = 3) +\n\n  geom_segment(\n    data = mean_escs,\n    aes(x = ESCS,\n        xend = ESCS,\n        y = total_avg,\n        yend = mean),\n    color = \"#8c8ed6\",\n    size = 0.8,\n  ) +\n  stat_summary(\n    fun=mean,\n    geom=\"point\",\n    size = 5,\n    color=\"#8c8ed6\",\n  ) +\n  geom_text(\n    aes(x = -0.2, y = 580, label = \"Subject Mean\"),\n            color = \"red\", size = 3,\n    data = data.frame(subject = \"Science\")) +    \n  scale_y_continuous(limits = c(0, 1000), expand = c(0.02,0.02)) +\n  labs(x = \"English Scores\",\n       y = \"\",\n       title=\"Disparities in academic achievement among different<br>socio-economic groups.\",\n       subtitle=\"Mean values highlighted in <span style='color: #8c8ed6;'>purple</span>.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(),\n    axis.text.x = element_text(),\n    panel.grid = element_blank(),\n    axis.ticks.y = element_blank(),    \n    plot.title = element_markdown(hjust=0),\n    plot.subtitle = element_markdown(hjust = 0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    strip.background = element_rect(color=\"#ecebeb\"),\n    strip.text = element_text(color =\"#202120\"))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2a_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nThe following objectives were achieved from the revamp:-\n\n**Clarity**\n\n1.  **x-axis:** The remade strip plot highlights the variance in range of subject scores by using a shared x-axis.\n\n2.  **ESCS-level mean:** The subject mean of each ESCS level is indicated by adding a summary statistic via `stat_summary()` with a different point size and colour to distinguish it from the points of `geom_point()`. Since the mean is a more important point of reference here, it is highlighted with a bigger size, zero transparency, and in bright purple colour.\n\n3.  **Mean line and annotation**: To relate all these points to a baseline, a red mean line is added to indicate the subject-level average score. We further highlight that the baseline is the subject-level average scores by adding a line from the average of each ESCS level to the subject average. The result is a combination of a strip and lollipop plot. The annotation for Subject Mean also helps explain the baseline level via `geom_text()`.\n\n**Aesthetics**\n\n4.  The overall format, design, and colour scheme have been refined to deliver a polished and professional appearance while maintaining clarity and avoiding information overload.\n\n## 3.5 Breakdown of Scores per Subject\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_breakdown <- pisa.ben.pv(pvlabel= paste0(\"PV\",1:10,\"MATH\"), by=\"CNT\", atlevel=TRUE, data=stu_SG)\n\nread_breakdown <- pisa.ben.pv(pvlabel= paste0(\"PV\",1:10,\"READ\"), by=\"CNT\", atlevel=TRUE, data=stu_SG)\n\nscie_breakdown <- pisa.ben.pv(pvlabel= paste0(\"PV\",1:10,\"SCIE\"), by=\"CNT\", atlevel=TRUE, data=stu_SG)\n```\n:::\n\n\nThe objective of the function above is to compute the percentage of students at each proficiency level as defined by PISA. However, for the purpose of visualising binned results, recoding the variables into more meaningful and intuitive categories might help with understanding.\n\nIn the code chunk below, the 2 lowest categories *\\<= 357.77* and *(357.77, 420.07\\]* are recoded as “low” to represent low proficiency levels, while *\\> 669.3* and *(606.99, 669.3\\]* are recoded as “high” to represent high proficiency levels. The remaining 3 bins are grouped as “average”. This recoding helps simplify the interpretation of proficiency levels for visualisation purposes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating a new combined table\nmath_breakdown$Subject <- 'Math'\nread_breakdown$Subject <- 'Reading'\nscie_breakdown$Subject <- 'Science'\n\ncombined_breakdown <- bind_rows(math_breakdown, read_breakdown, scie_breakdown)\n\n# Recoding proficiency levels\ncombined_breakdown <-\n  combined_breakdown %>% \n  mutate(proficiency=(recode(Benchmarks, \n                            '<= 357.77'=\"Low\",\n                            '(357.77, 420.07]'=\"Low\",\n                            '(420.07, 482.38]'='Average',\n                            '(482.38, 544.68]'='Average',\n                            '(544.68, 606.99]'='Average',\n                            '(606.99, 669.3]'='High',\n                            '> 669.3'='High')))\n\n# Ordering factors\ncombined_breakdown$proficiency <- factor(combined_breakdown$proficiency, levels = c(\"Low\", \"Average\", \"High\"))\n```\n:::\n\n\nThe revamped version proposes using waffle charts to visualise proportions using `geom_waffle()`. Each square grid represents a portion of the total data, making them idea for illustrating categorical data.\n\n-   `nrow()` within the `geom_waffle()` are used to specific the number of rows in the waffle chart. `nrow=10` indicates that the chart will have 10 rows of squares.\n\n-   `scale_fill_manual()`allows manual specification for the fill colours of the waffle chart.\n\n-   `facet_wrap()` allows visualisation of subsets of the data in separate panels within the same plot.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Generate the waffle chart\n\nwaf2 <- \n  combined_breakdown %>%\n  ggplot(aes(fill = proficiency, \n             values = Percentage)) +\n  expand_limits(x=c(0,0), \n                y=c(0,0)) +\n  coord_equal() +\n  labs(fill = NULL, \n       colour = NULL)+\n  theme_ipsum(grid=\"\")\n\nwaf2 +\n  geom_waffle(\n    n_rows = 10, \n    size = 0.33, \n    colour = \"#f5f5f5\", \n    flip = TRUE,\n    make_proportional = TRUE\n  ) +\n  scale_fill_manual(\n    values = c(\n               \"#fcd9e5\", \n               \"#f99cbc\",\n               \"#f5347f\") \n    )+\n  facet_wrap(~Subject, nrow =1, strip.position = \"bottom\") +\n  labs(title=\"A proportional perspective of subject performance\",\n       subtitle=\"Higher proportion of students with high proficiency in Math than other subjects.\") +   \n  theme(\n    legend.position = \"bottom\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid = element_blank(),\n    axis.ticks.y = element_blank(),    \n    plot.title = element_markdown(hjust=0),\n    plot.subtitle = element_markdown(hjust = 0),\n    strip.text.x = element_text(hjust = 0.5, margin=margin(l=0), face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\",),\n    plot.margin = unit(c(0, 0, 0, 0), \n                                \"inches\")\n)  \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2a_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nAn alternative approach using mean subject scores to dichotomise proficiency levels could be explored.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Recoding to above and below average\nproficiency <-\n  stu_SG %>% \n  select(PV1MATH, PV1READ, PV1SCIE) %>% \n  mutate(proficiency_math = \n           if_else(PV1MATH < mean_m, \"Below Average\", \"Above Average\"),\n         proficiency_read =\n           if_else(PV1READ < mean_r, \"Below Average\", \"Above Average\"),\n         proficiency_scie = \n           if_else(PV1SCIE < mean_s, \"Below Average\", \"Above Average\"))\n\n# Calculating the frequency and percentage of each category\nproficiency_summary <- proficiency %>%\n  summarize(\n    math_below_average = sum(proficiency_math == \"Below Average\"),\n    math_above_average = sum(proficiency_math == \"Above Average\"),\n    read_below_average = sum(proficiency_read == \"Below Average\"),\n    read_above_average = sum(proficiency_read == \"Above Average\"),\n    scie_below_average = sum(proficiency_scie == \"Below Average\"),\n    scie_above_average = sum(proficiency_scie == \"Above Average\")\n  ) %>%\n  mutate(\n    Math_below_average_pct = math_below_average / nrow(stu_SG) * 100,\n    Math_above_average_pct = math_above_average / nrow(stu_SG) * 100,\n    Reading_below_average_pct = read_below_average / nrow(stu_SG) * 100,\n    Reading_above_average_pct = read_above_average / nrow(stu_SG) * 100,\n    Science_below_average_pct = scie_below_average / nrow(stu_SG) * 100,\n    Science_above_average_pct = scie_above_average / nrow(stu_SG) * 100\n  )  %>%\n  select(ends_with(\"pct\")) %>% \n  pivot_longer(cols = starts_with(\"Math\") | starts_with(\"Reading_\") | starts_with(\"Science_\"),\n               names_to = c(\".value\", \"level\"),\n               names_sep = \"_\") %>% \n  pivot_longer(cols = starts_with(\"Math\") | starts_with(\"Reading\") | starts_with(\"Science\"),\n               names_to = \"subject\") %>% \n  mutate(level = factor(level, \n                levels = c(\"above\", \"below\"),\n                ordered = TRUE)) \n\n# Generate the waffle chart\n\nwaf <- \n  proficiency_summary %>%\n  ggplot(aes(fill = level, \n             values = value)) +\n  expand_limits(x=c(0,0), \n                y=c(0,0)) +\n  coord_equal() +\n  labs(fill = NULL, \n       colour = NULL)+\n  theme_ipsum(grid=\"\")\n\nwaf +\n  geom_waffle(\n    n_rows = 10, \n    size = 0.33, \n    colour = \"#f5f5f5\", \n    flip = TRUE,\n    make_proportional = TRUE\n  ) +\n  scale_fill_manual(\n    values = c(\"#f5347f\", \n               alpha(\"#65666a\", 1/3)) \n    )+\n  facet_wrap(~subject, nrow =1, strip.position = \"bottom\") +\n  labs(title=\"A proportional perspective of subject performance\",\n       subtitle=\"More than half with <span style='color: #e0218a;'>above average</span> of national subject scores.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    panel.grid = element_blank(),\n    axis.ticks.y = element_blank(),    \n    plot.title = element_markdown(hjust=0),\n    plot.subtitle = element_markdown(hjust = 0),\n    strip.text.x = element_text(hjust = 0.5, margin=margin(l=0), face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n        plot.margin = unit(c(0, 0, 0, 0), \n                                \"inches\")\n)  +\n    annotate(\"text\", \n             x = 6, \n             y =2.5, \n             label = paste(\"53%\"),\n             color=\"#f5347f\",\n             size = 10)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2a_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nIn the example above, the waffle charts efficiently convey parts of a whole using 2 colours to represent the proportion of students who performed above and below average.\n\nThe following objectives were achieved from the revamp:-\n\n**Clarity**\n\n1.  **Annotation:** The annotation indicates the proportion of students who scored above the average scores, eliminating the need for manual counting of filled squares.\n\n2.  **Facet Wrap:** The use of facet wrap helps divide a plot into a matrix of panels, with each panel showing a distinct subset of the data.\n\n**Aesthetic**\n\n3.  **Colours**: The pink and grey colour combination serves to differentiate the contribution of students who performed above and below the average subject mean score. Each square represents a percentage point, totaling 100. The muted grey tone aims to avoid drawing excessive attention while still visually representing the full extent of the chart, allowing for a clear visualisation of proportion. In the first example, the use of multiple colours was incorporated to reflect the number of categories. Furthermore, the colour gradient helps indicate the order of variables, with intensity increasing accordingly.\\\n\n# 4. References\n\nMain reference: My Visual Analytics classmate. (2024). [Take-home Exercise 2: DataVis Makeover For Take-home Exercise 1](https://akalestale.netlify.app/take-home_ex/take-home_ex02/take-home_ex02)\n",
    "supporting": [
      "Take-home_Ex2a_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}