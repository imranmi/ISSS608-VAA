{
  "hash": "423e279840fa670e2b962739feb292d6",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 4d - plotting for project poster\"\ndate: March 22, 2024\ndate-modified: \"last-modified\"\nauthor: \"Imran Ibrahim\"\ntoc: true\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\n# Getting Started\n\n## Loading R packages and Data prep\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, dplyr, tidyr, \n               sf, lubridate,plotly,\n               tmap, spdep, sfdep, knitr, forcats)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nACLED_MMR <- read_csv(\"data/MMR.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmmr_shp_mimu_2 <-  st_read(dsn = \"data/geospatial3\",  \n                  layer = \"mmr_polbnda_adm2_250k_mimu\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `mmr_polbnda_adm2_250k_mimu' from data source \n  `C:\\imranmi\\ISSS608-VAA\\Take-home-ex\\Take-home-Ex4d\\data\\geospatial3' \n  using driver `ESRI Shapefile'\nSimple feature collection with 80 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nACLED_MMR_1 <- ACLED_MMR %>%\n  mutate(admin1 = case_when(\n    admin1 == \"Bago-East\" ~ \"Bago (East)\",\n    admin1 == \"Bago-West\" ~ \"Bago (West)\",\n    admin1 == \"Shan-North\" ~ \"Shan (North)\",\n    admin1 == \"Shan-South\" ~ \"Shan (South)\",\n    admin1 == \"Shan-East\" ~ \"Shan (East)\",\n    TRUE ~ as.character(admin1)\n  ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nACLED_MMR_1 <- ACLED_MMR_1 %>%\n  mutate(admin2 = case_when(\n    admin2 == \"Yangon-East\" ~ \"Yangon (East)\",\n    admin2 == \"Yangon-West\" ~ \"Yangon (West)\",\n    admin2 == \"Yangon-North\" ~ \"Yangon (North)\",\n    admin2 == \"Yangon-South\" ~ \"Yangon (South)\",\n    admin2 == \"Mong Pawk (Wa SAD)\" ~ \"Tachileik\",\n    admin2 == \"Nay Pyi Taw\" ~ \"Det Khi Na\",\n    admin2 == \"Yangon\" ~ \"Yangon (West)\",\n    TRUE ~ as.character(admin2)\n  ))\n```\n:::\n\n\n### Loading in previously wrangled data for quarterly data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nEvents_2 <- read_csv(\"data/df_complete.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nEvents_admin2 <- left_join(mmr_shp_mimu_2, Events_2,\n                            by = c(\"DT\" = \"admin2\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nEvents_admin2 <- Events_admin2 %>%\n                      select(-OBJECTID, -ST, -ST_PCODE, \n                             -DT_PCODE, -DT_MMR, -PCode_V)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(Events_admin2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sf\"         \"data.frame\"\n```\n:::\n:::\n\n\n## Filtering for Event type == Battles, for all quarters from 2021-2023\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nBattles2021Q1 <- Events_admin2 %>%\n  filter(quarter == \"2021Q1\", event_type == \"Battles\")\n\nBattles2021Q2 <- Events_admin2 %>%\n  filter(quarter == \"2021Q2\", event_type == \"Battles\")\n\nBattles2021Q3 <- Events_admin2 %>%\n  filter(quarter == \"2021Q3\", event_type == \"Battles\")\n\nBattles2021Q4 <- Events_admin2 %>%\n  filter(quarter == \"2021Q4\", event_type == \"Battles\")\n\nBattles2022Q1 <- Events_admin2 %>%\n  filter(quarter == \"2022Q1\", event_type == \"Battles\")\n\nBattles2022Q2 <- Events_admin2 %>%\n  filter(quarter == \"2022Q2\", event_type == \"Battles\")\n\nBattles2022Q3 <- Events_admin2 %>%\n  filter(quarter == \"2022Q3\", event_type == \"Battles\")\n\nBattles2022Q4 <- Events_admin2 %>%\n  filter(quarter == \"2022Q4\", event_type == \"Battles\")\n\nBattles2023Q1 <- Events_admin2 %>%\n  filter(quarter == \"2023Q1\", event_type == \"Battles\")\n\nBattles2023Q2 <- Events_admin2 %>%\n  filter(quarter == \"2023Q2\", event_type == \"Battles\")\n\nBattles2023Q3 <- Events_admin2 %>%\n  filter(quarter == \"2023Q3\", event_type == \"Battles\")\n\nBattles2023Q4 <- Events_admin2 %>%\n  filter(quarter == \"2023Q4\", event_type == \"Battles\")\n```\n:::\n\n\n### Deriving contiguity weights: Queenâ€™s method\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwm_q1 <- Battles2021Q1 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q2 <- Battles2021Q2 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q3 <- Battles2021Q3 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q4 <- Battles2021Q4 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q5 <- Battles2022Q1 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q6 <- Battles2022Q2 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q7 <- Battles2022Q3 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q8 <- Battles2022Q4 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q9 <- Battles2023Q1 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q10 <- Battles2023Q2 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q11 <- Battles2023Q3 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q12 <- Battles2023Q4 %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n```\n:::\n\n\n### No of sims = 199\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlisa1 <- wm_q1 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa2 <- wm_q2 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa3 <- wm_q3 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa4 <- wm_q4 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa5 <- wm_q5 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa6 <- wm_q6 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa7 <- wm_q7 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa8 <- wm_q8 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa9 <- wm_q9 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa10 <- wm_q10 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa11 <- wm_q11 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n\nlisa12 <- wm_q12 %>% \n  mutate(local_moran = local_moran(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nVisualising LISA Map\n\nGetting the Significant P-values\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlisa_sig1 <- lisa1  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig2 <- lisa2  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig3 <- lisa3  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig4 <- lisa4  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig5 <- lisa5  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig6 <- lisa6  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig7 <- lisa7  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig8 <- lisa8  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig9 <- lisa9  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig10 <- lisa10  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig11 <- lisa11  %>%\n  filter(p_ii < 0.05)\n\nlisa_sig12 <- lisa12  %>%\n  filter(p_ii < 0.05)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlisa_sig1_1 <-  lisa_sig1 %>%\n  select(mean, DT, quarter)\n\nlisa_sig2_1 <-  lisa_sig2 %>%\n  select(mean, DT, quarter)\n\nlisa_sig3_1 <-  lisa_sig3 %>%\n  select(mean, DT, quarter)\n\nlisa_sig4_1 <-  lisa_sig4 %>%\n  select(mean, DT, quarter)\n\nlisa_sig5_1 <-  lisa_sig5 %>%\n  select(mean, DT, quarter)\n\nlisa_sig6_1 <-  lisa_sig6 %>%\n  select(mean, DT, quarter)\n\nlisa_sig7_1 <-  lisa_sig7 %>%\n  select(mean, DT, quarter)\n\nlisa_sig8_1 <-  lisa_sig8 %>%\n  select(mean, DT, quarter)\n\nlisa_sig9_1 <-  lisa_sig9 %>%\n  select(mean, DT, quarter)\n\nlisa_sig10_1 <-  lisa_sig10 %>%\n  select(mean, DT, quarter)\n\nlisa_sig11_1 <-  lisa_sig11 %>%\n  select(mean, DT, quarter)\n\nlisa_sig12_1 <-  lisa_sig12 %>%\n  select(mean, DT, quarter)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Bind the two data frames together\ncombined_df <- bind_rows(lisa_sig1_1, lisa_sig2_1,\n                         lisa_sig3_1, lisa_sig4_1,\n                         lisa_sig5_1, lisa_sig6_1,\n                         lisa_sig7_1, lisa_sig8_1,\n                         lisa_sig9_1, lisa_sig10_1,\n                         lisa_sig11_1, lisa_sig12_1,)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nquarter_summary_df <- combined_df %>%\n  group_by(DT, mean) %>%\n  summarize(\n    Quarters = paste(unique(quarter), collapse = \", \"),\n    .groups = 'drop'\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwide_quarter_summary_df <- quarter_summary_df %>%\n  pivot_wider(\n    names_from = mean,\n    values_from = Quarters,\n    values_fill = list(Quarters = NA)  # Fill with NA where there are no quarters\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(wide_quarter_summary_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 28 features and 4 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 93.09198 ymin: 9.696844 xmax: 99.32485 ymax: 28.54554\nGeodetic CRS:  WGS 84\n# A tibble: 28 Ã— 5\n   DT                                  geometry `Low-High` `High-High` `Low-Low`\n   <chr>                         <GEOMETRY [Â°]> <chr>      <chr>       <chr>    \n 1 Bawlake   POLYGON ((97.52725 19.33779, 97.5â€¦ 2022Q1, 2â€¦ 2021Q3      <NA>     \n 2 Bhamo     POLYGON ((97.19567 24.90225, 97.1â€¦ 2023Q4     2021Q1, 20â€¦ <NA>     \n 3 Dawei     MULTIPOLYGON (((98.13264 13.53337â€¦ <NA>       2022Q4, 20â€¦ <NA>     \n 4 Gangaw    POLYGON ((94.11823 22.76677, 94.1â€¦ <NA>       2021Q3, 20â€¦ <NA>     \n 5 Hakha     POLYGON ((93.3483 23.07166, 93.33â€¦ 2022Q1, 2â€¦ <NA>        <NA>     \n 6 Hpa-An    MULTIPOLYGON (((97.815 16.52402, â€¦ 2022Q1, 2â€¦ <NA>        <NA>     \n 7 Kale      POLYGON ((94.17719 23.65037, 94.1â€¦ <NA>       2021Q4, 20â€¦ <NA>     \n 8 Kanbalu   POLYGON ((95.10246 23.84708, 95.1â€¦ 2022Q2, 2â€¦ 2022Q4, 20â€¦ <NA>     \n 9 Katha     POLYGON ((95.80617 24.95999, 95.8â€¦ <NA>       2021Q2      <NA>     \n10 Kawthoung MULTIPOLYGON (((98.10929 9.708863â€¦ 2022Q4, 2â€¦ <NA>        <NA>     \n# â„¹ 18 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove the geometry column to make it a regular data frame\nregular_df <- st_drop_geometry(wide_quarter_summary_df)\n```\n:::\n\n::: {.cell .column-body-outset-right}\n\n```{.r .cell-code}\nregular_df <- regular_df %>%\n  rename(\"District\" = \"DT\")\n\nkable(regular_df)\n```\n\n::: {.cell-output-display}\n|District                        |Low-High                       |High-High                                                                      |Low-Low |\n|:-------------------------------|:------------------------------|:------------------------------------------------------------------------------|:-------|\n|Bawlake                         |2022Q1, 2022Q2                 |2021Q3                                                                         |NA      |\n|Bhamo                           |2023Q4                         |2021Q1, 2021Q2, 2021Q3, 2021Q4, 2023Q3                                         |NA      |\n|Dawei                           |NA                             |2022Q4, 2023Q1, 2023Q2                                                         |NA      |\n|Gangaw                          |NA                             |2021Q3, 2021Q4, 2022Q1, 2022Q2, 2022Q3, 2023Q1, 2023Q2, 2023Q3                 |NA      |\n|Hakha                           |2022Q1, 2022Q2                 |NA                                                                             |NA      |\n|Hpa-An                          |2022Q1, 2022Q2, 2022Q3, 2023Q2 |NA                                                                             |NA      |\n|Kale                            |NA                             |2021Q4, 2022Q1, 2022Q2, 2023Q1, 2023Q2                                         |NA      |\n|Kanbalu                         |2022Q2, 2022Q3                 |2022Q4, 2023Q2                                                                 |NA      |\n|Katha                           |NA                             |2021Q2                                                                         |NA      |\n|Kawthoung                       |2022Q4, 2023Q2                 |NA                                                                             |NA      |\n|Kokang Self-Administered Zone   |2021Q1, 2021Q3, 2021Q4         |2023Q4                                                                         |NA      |\n|Lashio                          |NA                             |2021Q1, 2021Q3, 2023Q4                                                         |NA      |\n|Loilen                          |2021Q1                         |NA                                                                             |NA      |\n|Maubin                          |NA                             |NA                                                                             |2023Q2  |\n|Mohnyin                         |NA                             |2021Q2                                                                         |NA      |\n|Mongmit                         |2021Q1, 2021Q2, 2023Q4         |NA                                                                             |NA      |\n|Monywa                          |2021Q3                         |2021Q4, 2022Q1, 2022Q2, 2022Q3, 2022Q4, 2023Q1, 2023Q2, 2023Q3, 2023Q4         |NA      |\n|Muse                            |NA                             |2021Q2, 2023Q4                                                                 |NA      |\n|Myingyan                        |NA                             |2023Q1                                                                         |NA      |\n|Myitkyina                       |NA                             |2021Q2                                                                         |NA      |\n|Naga Self-Administered Zone     |2021Q2                         |NA                                                                             |NA      |\n|Nyaung-U                        |2023Q1                         |NA                                                                             |NA      |\n|Pa Laung Self-Administered Zone |2021Q2, 2021Q3                 |2021Q1, 2023Q4                                                                 |NA      |\n|Pakokku                         |NA                             |2022Q2, 2022Q4, 2023Q1, 2023Q2                                                 |NA      |\n|Puta-O                          |NA                             |2021Q2                                                                         |NA      |\n|Sagaing                         |NA                             |2022Q2, 2022Q4, 2023Q1, 2023Q2, 2023Q3                                         |NA      |\n|Shwebo                          |NA                             |2021Q4, 2022Q1, 2022Q2, 2022Q3, 2022Q4, 2023Q1, 2023Q2, 2023Q3                 |NA      |\n|Yinmarbin                       |NA                             |2021Q3, 2021Q4, 2022Q1, 2022Q2, 2022Q3, 2022Q4, 2023Q1, 2023Q2, 2023Q3, 2023Q4 |NA      |\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_df1 <- combined_df %>%\n  group_by(DT) %>%\n  summarize(\n    High_High_Clusters = sum(mean == \"High-High\"),\n    Low_High_Clusters = sum(mean == \"Low-High\"),\n    Low_Low_Clusters = sum(mean == \"Low-Low\"),   \n    .groups = 'drop'\n  )\n\n# Remove the geometry column to make it a regular data frame\nregular_df1 <- st_drop_geometry(summary_df1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop10_high_high_df <- regular_df1 %>%\n  arrange(desc(High_High_Clusters)) %>%\n  slice_head(n = 10) %>%\n  rename(\"District\" = \"DT\")\n\n\nkable(top10_high_high_df)\n```\n\n::: {.cell-output-display}\n|District  | High_High_Clusters| Low_High_Clusters| Low_Low_Clusters|\n|:---------|------------------:|-----------------:|----------------:|\n|Yinmarbin |                 10|                 0|                0|\n|Monywa    |                  9|                 1|                0|\n|Gangaw    |                  8|                 0|                0|\n|Shwebo    |                  8|                 0|                0|\n|Bhamo     |                  5|                 1|                0|\n|Kale      |                  5|                 0|                0|\n|Sagaing   |                  5|                 0|                0|\n|Pakokku   |                  4|                 0|                0|\n|Dawei     |                  3|                 0|                0|\n|Lashio    |                  3|                 0|                0|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nLISAbar <- ggplot(data = top10_high_high_df, aes(x = fct_reorder(District, High_High_Clusters), y = High_High_Clusters)) +\n  geom_bar(stat = \"identity\") + \n  coord_flip() +\n  theme_minimal() +\n  theme(axis.title.x = element_blank(), axis.title.y = element_blank(),  \n        axis.text.x = element_blank()) + \n  ggtitle(\"Top 10 Districts with the most High-High Clusters (2021-2023)\") + \n  geom_text(aes(label = High_High_Clusters), hjust = -0.1) \n\nLISAbar\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex4d_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlisamap1 <- tm_shape(lisa1) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig1) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2021\",\n            title = \"Quarter 1\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap2 <- tm_shape(lisa2) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig2) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2021\",\n            title = \"Quarter 2\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap3 <- tm_shape(lisa3) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig3) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2021\",\n            title = \"Quarter 3\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap4 <- tm_shape(lisa4) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig4) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2021\",\n            title = \"Quarter 4\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap5 <- tm_shape(lisa5) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig5) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2022\",\n            title = \"Quarter 1\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap6 <- tm_shape(lisa6) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig6) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2022\",\n            title = \"Quarter 2\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap7 <- tm_shape(lisa7) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig7) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2022\",\n            title = \"Quarter 3\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap8 <- tm_shape(lisa8) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig8) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2022\",\n            title = \"Quarter 4\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap9 <- tm_shape(lisa9) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig9) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2023\",\n            title = \"Quarter 1\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap10 <- tm_shape(lisa10) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig10) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2023\",\n            title = \"Quarter 2\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap11 <- tm_shape(lisa11) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig11) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2023\",\n            title = \"Quarter 3\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nlisamap12 <- tm_shape(lisa12) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig12) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map for Battles in 2022\",\n            title = \"Quarter 4\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n```\n:::\n\n::: {.cell .column-body-outset-right}\n\n```{.r .cell-code}\ntmap_arrange(lisamap1, lisamap2, lisamap3, lisamap4, \n             lisamap5, lisamap6, lisamap7, lisamap8, \n             lisamap9, lisamap10, lisamap11, lisamap12, \n             asp = 1,\n             ncol=4, nrow=3)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex4d_files/figure-html/unnamed-chunk-25-1.png){width=1152}\n:::\n:::\n\n\n# Hot and Cold Spot Analysis (HCSA)\n\n## Computing local Gi\\* statistics\n\nWe will need to derive a spatial weight matrix before we can compute local Gi\\* statistics. Code chunk below will be used to derive a spatial weight matrix by using sfdep functions and tidyverse approach.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwm_idw1 <- Battles2021Q1 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw2 <- Battles2021Q2 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw3 <- Battles2021Q3 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw4 <- Battles2021Q4 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw5 <- Battles2022Q1 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw6 <- Battles2022Q2 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw7 <- Battles2022Q3 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw8 <- Battles2022Q4 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw9 <- Battles2023Q1 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw10 <- Battles2023Q2 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw11 <- Battles2023Q3 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nwm_idw12 <- Battles2023Q4 %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n```\n:::\n\n\n### No of sim = 199\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nHCSA1 <- wm_idw1 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA2 <- wm_idw2 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA3 <- wm_idw3 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA4 <- wm_idw4 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA5 <- wm_idw5 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA6 <- wm_idw6 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA7 <- wm_idw7 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA8 <- wm_idw8 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA9 <- wm_idw9 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA10 <- wm_idw10 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA11 <- wm_idw11 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA12 <- wm_idw12 %>% \n  mutate(local_Gi = local_gstar_perm(\n    Incidents, nb, wt, nsim = 199),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\nCalculating the significant p-vals \\< 0.05\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nHCSA_sig1 <- HCSA1  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig2 <- HCSA2  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig3 <- HCSA3  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig4 <- HCSA4  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig5 <- HCSA5  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig6 <- HCSA6  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig7 <- HCSA7  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig8 <- HCSA8  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig9 <- HCSA9  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig10 <- HCSA10  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig11 <- HCSA11  %>%\n  filter(p_value < 0.05)\n\nHCSA_sig12 <- HCSA12  %>%\n  filter(p_value < 0.05)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nHCSA_sig1_1 <-  HCSA_sig1 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig2_1 <-  HCSA_sig2 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig3_1 <-  HCSA_sig3 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig4_1 <-  HCSA_sig4 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig5_1 <-  HCSA_sig5 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig6_1 <-  HCSA_sig6 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig7_1 <-  HCSA_sig7 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig8_1 <-  HCSA_sig8 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig9_1 <-  HCSA_sig9 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig10_1 <-  HCSA_sig10 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig11_1 <-  HCSA_sig11 %>%\n  select(cluster, DT, quarter)\n\nHCSA_sig12_1 <-  HCSA_sig12 %>%\n  select(cluster, DT, quarter)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Bind the data frames together\ncombined_df2 <- bind_rows(HCSA_sig1_1, HCSA_sig2_1,\n                         HCSA_sig3_1, HCSA_sig4_1,\n                         HCSA_sig5_1, HCSA_sig6_1,\n                         HCSA_sig7_1, HCSA_sig8_1,\n                         HCSA_sig9_1, HCSA_sig10_1,\n                         HCSA_sig11_1, HCSA_sig12_1,)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nquarter_summary_df2 <- combined_df2 %>%\n  group_by(DT, cluster) %>%\n  summarize(\n    Quarters = paste(unique(quarter), collapse = \", \"),\n    .groups = 'drop'\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwide_quarter_summary_df2 <- quarter_summary_df2 %>%\n  pivot_wider(\n    names_from = cluster,\n    values_from = Quarters,\n    values_fill = list(Quarters = NA)  # Fill with NA where there are no quarters\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(wide_quarter_summary_df2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 30 features and 3 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 93.09198 ymin: 9.696844 xmax: 99.32485 ymax: 28.54554\nGeodetic CRS:  WGS 84\n# A tibble: 30 Ã— 4\n   DT                                                       geometry Low   High \n   <chr>                                              <GEOMETRY [Â°]> <chr> <chr>\n 1 Bawlake   POLYGON ((97.52725 19.33779, 97.52732 19.34059, 97.524â€¦ 2022â€¦ 2021â€¦\n 2 Bhamo     POLYGON ((97.19567 24.90225, 97.1954 24.90408, 97.1909â€¦ 2023â€¦ 2021â€¦\n 3 Dawei     MULTIPOLYGON (((98.13264 13.53337, 98.13266 13.53345, â€¦ <NA>  2022â€¦\n 4 Gangaw    POLYGON ((94.11823 22.76677, 94.11878 22.7686, 94.1152â€¦ <NA>  2021â€¦\n 5 Hakha     POLYGON ((93.3483 23.07166, 93.33987 23.07274, 93.3431â€¦ 2022â€¦ <NA> \n 6 Hpa-An    MULTIPOLYGON (((97.815 16.52402, 97.81483 16.52413, 97â€¦ 2022â€¦ <NA> \n 7 Kale      POLYGON ((94.17719 23.65037, 94.17714 23.65038, 94.177â€¦ <NA>  2022â€¦\n 8 Kanbalu   POLYGON ((95.10246 23.84708, 95.10219 23.84983, 95.103â€¦ 2021â€¦ 2023â€¦\n 9 Katha     POLYGON ((95.80617 24.95999, 95.80529 24.95822, 95.793â€¦ <NA>  2021â€¦\n10 Kawthoung MULTIPOLYGON (((98.10929 9.708863, 98.11007 9.711755, â€¦ 2022â€¦ <NA> \n# â„¹ 20 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove the geometry column to make it a regular data frame\nregular_df2 <- st_drop_geometry(wide_quarter_summary_df2)\n```\n:::\n\n::: {.cell .column-body-outset-right}\n\n```{.r .cell-code}\nregular_df2 <- regular_df2 %>%\n  rename(\"District\" = \"DT\")\n\nkable(regular_df2)\n```\n\n::: {.cell-output-display}\n|District                        |Low                            |High                                                                           |\n|:-------------------------------|:------------------------------|:------------------------------------------------------------------------------|\n|Bawlake                         |2022Q1, 2022Q2                 |2021Q3                                                                         |\n|Bhamo                           |2023Q4                         |2021Q1, 2021Q2, 2021Q3, 2021Q4                                                 |\n|Dawei                           |NA                             |2022Q4, 2023Q1, 2023Q2                                                         |\n|Gangaw                          |NA                             |2021Q3, 2021Q4, 2022Q1, 2022Q2, 2022Q3, 2023Q1, 2023Q2, 2023Q3                 |\n|Hakha                           |2022Q1, 2022Q2                 |NA                                                                             |\n|Hpa-An                          |2022Q2, 2022Q3                 |NA                                                                             |\n|Kale                            |NA                             |2022Q1, 2022Q2, 2022Q3, 2023Q1, 2023Q2                                         |\n|Kanbalu                         |2021Q4, 2022Q1, 2022Q2, 2022Q3 |2023Q2                                                                         |\n|Katha                           |NA                             |2021Q2                                                                         |\n|Kawthoung                       |2022Q4, 2023Q1, 2023Q2         |NA                                                                             |\n|Kokang Self-Administered Zone   |2021Q1, 2021Q3, 2021Q4         |2023Q4                                                                         |\n|Kyaukse                         |2021Q1                         |NA                                                                             |\n|Lashio                          |NA                             |2021Q1, 2023Q4                                                                 |\n|Loilen                          |2021Q1                         |NA                                                                             |\n|Maubin                          |2022Q3, 2023Q2                 |NA                                                                             |\n|Mawlamyine                      |NA                             |2023Q2                                                                         |\n|Mohnyin                         |NA                             |2021Q2                                                                         |\n|Mongmit                         |2021Q1, 2021Q2, 2023Q4         |NA                                                                             |\n|Monywa                          |NA                             |2021Q4, 2022Q1, 2022Q2, 2022Q3, 2022Q4, 2023Q1, 2023Q2, 2023Q3, 2023Q4         |\n|Muse                            |NA                             |2021Q2, 2023Q4                                                                 |\n|Myingyan                        |NA                             |2023Q1                                                                         |\n|Myitkyina                       |NA                             |2021Q2                                                                         |\n|Nyaung-U                        |2023Q1                         |NA                                                                             |\n|Pa Laung Self-Administered Zone |2021Q2, 2021Q3                 |2021Q1, 2023Q4                                                                 |\n|Pakokku                         |NA                             |2022Q2, 2023Q1, 2023Q2                                                         |\n|Puta-O                          |NA                             |2021Q2                                                                         |\n|Sagaing                         |NA                             |2022Q2, 2022Q3, 2022Q4, 2023Q1, 2023Q2, 2023Q3                                 |\n|Shwebo                          |NA                             |2021Q4, 2022Q1, 2022Q2, 2022Q3, 2022Q4, 2023Q1, 2023Q2, 2023Q3                 |\n|Yangon (South)                  |2023Q2                         |NA                                                                             |\n|Yinmarbin                       |NA                             |2021Q3, 2021Q4, 2022Q1, 2022Q2, 2022Q3, 2022Q4, 2023Q1, 2023Q2, 2023Q3, 2023Q4 |\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_df2 <- combined_df2 %>%\n  group_by(DT) %>%\n  summarize(\n    High_Clusters = sum(cluster == \"High\"),\n    Low_Clusters = sum(cluster == \"Low\"),\n    .groups = 'drop'\n  )\n\n# Remove the geometry column to make it a regular data frame\nregular_df3 <- st_drop_geometry(summary_df2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop10_high_df <- regular_df3 %>%\n  arrange(desc(High_Clusters)) %>%\n  slice_head(n = 10) %>%\n  rename(\"District\" = \"DT\")\n\n\nkable(top10_high_df)\n```\n\n::: {.cell-output-display}\n|District  | High_Clusters| Low_Clusters|\n|:---------|-------------:|------------:|\n|Yinmarbin |            10|            0|\n|Monywa    |             9|            0|\n|Gangaw    |             8|            0|\n|Shwebo    |             8|            0|\n|Sagaing   |             6|            0|\n|Kale      |             5|            0|\n|Bhamo     |             4|            1|\n|Dawei     |             3|            0|\n|Pakokku   |             3|            0|\n|Lashio    |             2|            0|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSAbar <- ggplot(data = top10_high_df, aes(x = fct_reorder(District, High_Clusters), y = High_Clusters)) +\n  geom_bar(stat = \"identity\") + \n  coord_flip() +\n  theme_minimal() +\n  theme(axis.title.x = element_blank(), axis.title.y = element_blank(),  \n        axis.text.x = element_blank()) + \n  ggtitle(\"Top 10 Districts with the most High Clusters (2021-2023)\") + \n  geom_text(aes(label = High_Clusters), hjust = -0.1) \n\nHCSAbar\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex4d_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nHCSAmap1 <- tm_shape(HCSA1) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig1) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \" HCSA Map for Battles in 2021\",\n            title = \"Quarter 1\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap2 <- tm_shape(HCSA2) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig2) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2021\",\n            title = \"Quarter 2\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap3 <- tm_shape(HCSA3) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig3) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2021\",\n            title = \"Quarter 3\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap4 <- tm_shape(HCSA4) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig4) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2021\",\n            title = \"Quarter 4\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap5 <- tm_shape(HCSA5) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig5) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2022\",\n            title = \"Quarter 1\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap6 <- tm_shape(HCSA6) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig6) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2022\",\n            title = \"Quarter 2\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap7 <- tm_shape(HCSA7) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig7) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2022\",\n            title = \"Quarter 3\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap8 <- tm_shape(HCSA8) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig8) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2022\",\n            title = \"Quarter 4\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap9 <- tm_shape(HCSA9) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig9) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2023\",\n            title = \"Quarter 1\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap10 <- tm_shape(HCSA10) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig10) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2023\",\n            title = \"Quarter 2\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap11 <- tm_shape(HCSA11) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig11) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2023\",\n            title = \"Quarter 3\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n\nHCSAmap12 <- tm_shape(HCSA12) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig12) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA Map for Battles in 2022\",\n            title = \"Quarter 4\",\n            main.title.size = 0.90,\n            legend.height = 0.60, \n            legend.width = 5.0,\n            legend.outside = FALSE,\n            legend.position = c(\"left\", \"bottom\"))\n```\n:::\n\n::: {.cell .column-body-outset-right}\n\n```{.r .cell-code}\ntmap_arrange(HCSAmap1, HCSAmap2, HCSAmap3, HCSAmap4, \n             HCSAmap5, HCSAmap6, HCSAmap7, HCSAmap8, \n             HCSAmap9, HCSAmap10, HCSAmap11, HCSAmap12, \n             asp = 1,\n             ncol=4, nrow=3)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex4d_files/figure-html/unnamed-chunk-40-1.png){width=1152}\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex4d_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}