---
title: "Take-Home Exercise 2 : DataVis Makeover"
date: January 22, 2024
date-modified: "last-modified"
toc: true
execute: 
  eval: true
  echo: true
  warning: false
bibliography: references.bib
---

::: callout-important
## DataVis Makeover

Remaking a peer’s original design by improving the clarity and aesthetics of charts and/or by creating an alternative design if needed.
:::

# 1. The Task

In this take-home exercise, we are required to:

-   select one of the Take-home Exercise 1 prepared by our classmates,

-   critique the submission in terms of clarity and aesthetics,

-   prepare a sketch for the alternative design by using the data visualization design principles and best practices we have learned in Lesson 1 and 2, and

-   remake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.

# 2. Data Preparation

I will follow the data preparation steps done by the original author of the selector graphs. The steps are listed below for easy reference. As this is not the focus of the exercise, I will not go into the minute details of preparation.

## 2.1 Loading R packages

```{r}
pacman::p_load(tidyverse, haven, ggrepel, ggthemes, hrbrthemes, patchwork, intsvy, ggdist, ggridges,colorspace, plotly)
```

## 2.2 Importing the Data set

```{r}
stu_qqq_SG <- 
  read_rds("data/stu_qqq_SG.rds")
```

## 2.3 Removing missing values and Converting data types

Rows with missing values for ESCS were removed before further analysis.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
stu_qqq_SG_clean <- stu_qqq_SG[complete.cases(stu_qqq_SG[, "ESCS"]), ]
```

CNTSCHID and CNTSTUID's data types were changed to character.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
stu_qqq_SG_clean$CNTSCHID <- as.character(stu_qqq_SG_clean$CNTSCHID)
stu_qqq_SG_clean$CNTSTUID <- as.character(stu_qqq_SG_clean$CNTSTUID)
```

## 2.4 Binning Variable ESCS

The ESCS variable was binned into quantiles using the [mutate()](https://dplyr.tidyverse.org/reference/mutate.html) and [cut()](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut) function

```{r}
#| code-fold: true
#| code-summary: "Show the code"
stu_qqq_SG_clean <- stu_qqq_SG_clean %>%
  mutate(ESCS_recoded = cut(ESCS,breaks=quantile(ESCS,c(0,0.25,0.5,0.75,1)),labels=c("Very Low","Low","Medium","High"),include.lowest=TRUE))
```

## 2.5 Recoding ST004D01T (Gender) variable

Variable ST004D01T, was recoded to labels to “Female” and “Male” respectively.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
stu_qqq_SG_clean$ST004D01T <- recode(stu_qqq_SG_clean$ST004D01T, "1" = "Female", "2" = "Male")
```

# 3. Visualization Critique and Remake

The graphs created by the author will be evaluated and improvements in terms of clarity and aesthetics will be applied in the makeover.

## 3.1 General distribution of students’ performance in Math, Science and Reading

The author had created a data folder path to save any data files generated:

```{r}
#| code-fold: true
#| code-summary: "Show the code"

data_folder_path <- file.path(getwd(), "data")
```

The code below is used to determine the Mean and Standard Deviation of PV values across the population of students that took the assessment, and merge the values via a [rbind()](https://dplyr.tidyverse.org/reference/bind.html) function (with a [relocate()](https://dplyr.tidyverse.org/reference/relocate.html) function to bring the newly formed “subject” column to the front of the dataframe) to form a table indicating the Mean and Standard Deviation of PV values per subject

```{r}
#| code-fold: true
#| code-summary: "Show the code"

pvmathgeneral <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"), data=stu_qqq_SG_clean,export=FALSE,name="pvmath_general",folder=data_folder_path)

pvmathgeneral$subject <- "Math"

pvreadgeneral <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"), data=stu_qqq_SG_clean,export=FALSE,name="pvread_general",folder=data_folder_path)

pvreadgeneral$subject <- "Reading"

pvsciegeneral <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"), data=stu_qqq_SG_clean,export=FALSE,name="pvscie_general",folder=data_folder_path)

pvsciegeneral$subject <- "Science"

mergedgeneral <- rbind(pvmathgeneral,pvreadgeneral,pvsciegeneral)
mergedgeneral %>% relocate(subject)
```

The graphical representation of the general distribution of Math, Reading and Science scores was generated using the code below.

::: panel-tabset
## The original plot

![](images/clipboard-3818993272.png)

The author had created a series of box plots across the 3 subjects to represent Student scores across the 3 subjects.

## The code

```{r}
#| eval: false

p1<- ggplot(mergedgeneral, aes(x = subject, y = Mean,colour=subject)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    aes(colour=subject),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD),
    width = 0.5,
    size=0.8,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Scores across Math, Reading and Science across all 15-year olds who took PISA 2022 in SGP") +
  ylab("Scores") +
  xlab("Subject")+
  scale_y_continuous(limits = c(0, 1000), breaks = seq(0, 1000, by = 50))+
  coord_flip() +
  theme_minimal(base_size = 12)
p1
```
:::

### 3.1.1 Evaluation

+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Assessment Criteria | Critique/Feedback                                                                                                                                                                                   | Possible Improvements                                                                                                                                                                                                                                    |
+=====================+=====================================================================================================================================================================================================+==========================================================================================================================================================================================================================================================+
| **Clarity**         | 1.  Graph is titled as “General distribution of students’ performance in Math, Science and Reading”, however the code indicates that mean scores +/- one standard deviation were generated instead. | 1.  The code and subset used is not suitable to plot a **Distribution** of student scores across subjects. I will extract a new subset for the revised visualization. This will then plot the distribution of student scores for the different subjects. |
|                     |                                                                                                                                                                                                     |                                                                                                                                                                                                                                                          |
|                     | 2.  The data subset used for this plot only has 3 observations and 6 variables. It is actually the overall mean score for the student cohort across the subjects.                                   |                                                                                                                                                                                                                                                          |
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Aesthetics**      | 1.  There is already a legend which identifies subjects by colour, thus making the Y axis labels seem redundant.                                                                                    | 1.  To remove either the legend of Axis label, to minimize non-data ink.                                                                                                                                                                                 |
|                     |                                                                                                                                                                                                     |                                                                                                                                                                                                                                                          |
|                     | 2.  The scale for the X-axis is from 0 to 1000, in increments of 50. Because of the "lack of range" in the mean scores, the plot appears too elongated.                                             | 2.  Shorten the X-axis, or extract new data points to populate the correct range of scores.                                                                                                                                                              |
|                     |                                                                                                                                                                                                     |                                                                                                                                                                                                                                                          |
|                     | 3.  Unable to decipher the actual mean scores even with the granularity in X-axis tick marks.                                                                                                       | 3.  To annotate the mean scores onto the plot, so that we can remove the background grid lines and X-axis tick marks and reduce non-data ink.                                                                                                            |
|                     |                                                                                                                                                                                                     |                                                                                                                                                                                                                                                          |
|                     | 4.  Since the subjects are clearly labelled in the Y axis, the label “Subject” can be removed.                                                                                                      | 4.  To remove the label "Subject".                                                                                                                                                                                                                       |
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

::: callout-note
## Observation

Upon closer examination of the code below, the author had included an error bar with Mean +/- one standard deviation.

```{r}
#geom_errorbar(
    #aes(ymin = Mean - SD, ymax = Mean + SD),
    #width = 0.5,
    #size=0.8,
    #position = position_dodge(width = 0.5)
```

I would conclude that this plot is actually comparing the mean subject scores across subjects.
:::

Examining the subset used for the original plot in more detail.

```{r}
print(mergedgeneral)
```

The *mergedgeneral* subset table only has 3 observations and 6 variables.

::: callout-note
## Conclusion

The code and subset used will not be able to plot a **Distribution** of student scores across subjects.

I will use PV1 scores which are available for all students to create new plots to visualize the distribution of scores.
:::

### 3.1.2 Sketch of Proposed Design

Rough sketch of proposed design is shown below.

### 3.1.3 Remake

Since the original data sub set and code is unable to exhibit the distribution of student scores across subjects.

First, I will use the code below to extract data from the original data set to get our reference lines (mean and median.

In terms of data, I will use the PV1 scores which are available for all students.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

mean_pv1math <- mean(stu_qqq_SG$PV1MATH)
median_pv1math <- median(stu_qqq_SG$PV1MATH)
mean_pv1read <- mean(stu_qqq_SG$PV1READ)
median_pv1read <- median(stu_qqq_SG$PV1READ)
mean_pv1scie <- mean(stu_qqq_SG$PV1SCIE)
median_pv1scie <- median(stu_qqq_SG$PV1SCIE)

```

Next, I will use the code below to extract data points from the original large data set to re-make the original graph into Histograms with Density plots for each subject.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

p_1 <- ggplot(stu_qqq_SG, aes(x = PV1MATH)) +
  geom_histogram(aes(y = ..density..), binwidth = 20, color = "black", fill='lightblue') +
  geom_density(color = "purple") + 
  coord_cartesian(xlim = c(0, 1000)) +
  labs(x = "Math Scores", y = "Density") + # Change label to 'Density'
  geom_vline(xintercept = mean_pv1math, color = 'black', size = 0.65, linetype = "dashed") +
  geom_text(
    aes(x = mean_pv1math, y = 0.0025, label = paste("Mean:", round(mean_pv1math, 2))), # Adjust y position for text
    color = "black", hjust = 1.75, size = 3
  ) +
  geom_vline(xintercept = median_pv1math, color = 'red', size = 0.65, linetype = "dashed") +
  geom_text(
    aes(x = median_pv1math, y = 0.0025, label = paste("Median:", round(median_pv1math, 2))), # Adjust y position for text
    color = "red", hjust = -0.75, size = 3
  ) +
  theme_minimal()

p_2 <- ggplot(stu_qqq_SG, aes(x = PV1READ)) +
  geom_histogram(aes(y = ..density..), binwidth = 20, color = "black", fill='lightgreen') +
  geom_density(color = "purple") + 
  coord_cartesian(xlim = c(0, 1000)) +
  labs(x = "Reading Scores", y = "Density") + 
  geom_vline(xintercept = mean_pv1read, color = 'black', size = 0.65, linetype = "dashed") +
  geom_text(
    aes(x = mean_pv1read, y = 0.0025, label = paste("Mean:", round(mean_pv1read, 2))), # Adjust y position for text
    color = "black", hjust = 1.75, size = 3
  ) +
  geom_vline(xintercept = median_pv1read, color = 'red', size = 0.65, linetype = "dashed") +
  geom_text(
    aes(x = median_pv1read, y = 0.0025, label = paste("Median:", round(median_pv1read, 2))), # Adjust y position for text
    color = "red", hjust = -0.75, size = 3
  ) +
  theme_minimal()

p_3 <- ggplot(stu_qqq_SG, aes(x = PV1SCIE)) +
  geom_histogram(aes(y = ..density..), binwidth = 20, color = "black", fill='lightpink') +
  geom_density(color = "purple") +  
  coord_cartesian(xlim = c(0, 1000)) +
  labs(x = "Science Scores", y = "Density") + 
  geom_vline(xintercept = mean_pv1scie, color = 'black', size = 0.65, linetype = "dashed") +
  geom_text(
    aes(x = mean_pv1scie, y = 0.0025, label = paste("Mean:", round(mean_pv1scie, 2))), # Adjust y position for text
    color = "black", hjust = 1.75, size = 3
  ) +
  geom_vline(xintercept = median_pv1scie, color = 'red', size = 0.65, linetype = "dashed") +
  geom_text(
    aes(x = median_pv1scie, y = 0.0025, label = paste("Median:", round(median_pv1scie, 2))), # Adjust y position for text
    color = "red", hjust = -0.75, size = 3
  ) +
  theme_minimal()

p_4 <- ggplot(stu_qqq_SG, aes(x = PV1MATH, fill = "Math")) +
  geom_density(alpha = 0.5) +
  geom_density(data = stu_qqq_SG, aes(x = PV1READ, fill = "Reading"), alpha = 0.5) +
  geom_density(data = stu_qqq_SG, aes(x = PV1SCIE, fill = "Science"), alpha = 0.5) +
  labs(x = "Combined Scores",
       y = "Density") +
  scale_fill_manual(values = c("Math" = "lightblue", "Reading" = "lightgreen", "Science" = "lightpink")) +
  guides(fill = FALSE) +  # Remove the legend
  theme_minimal()

```

Finally, using the code below, I will create a composite graph for all the histograms and density plots using the code below.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 10
#| fig-height: 7
#| column: body-outset-right


patch1 <- (p_1 + p_2) / (p_3 + p_4)  + 
              plot_annotation(
                title = "Distribution of student performance in Math, Reading and Science",
                subtitle = "All subjects exhibit a slight left-skewed distribution" )

patch1 & theme( axis.text.y = element_blank(),panel.grid.major = element_blank(),)
```

::: callout-tip
## Revised Plot

The revised plot consists of a patchwork of 3 histograms with density curves, and a combined density curve overlay for the 3 subjects.\
\
Reference lines for the mean and median scores are also added to enable readers to infer the skewness of the distribution of student scores.\
\
The revised will enable readers to quickly infer the nature of the distributions of the subject scores.
:::

## 3.2 Distribution of students’ performance in Math, Science and Reading across school

The author has used the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package, to obtain the composite Mean and Standard Deviation values from “PV1MATH” to “PV10MATH”, “PV1READ” to “PV10READ” and “PV1SCIE” to “PV10SCIE” for each school.

The code below generates the composite PV values.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

pvmathsch <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"),by= "CNTSCHID", data=stu_qqq_SG_clean,export=FALSE,name="pvmath_bysch",folder=data_folder_path)

pvreadsch <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"),by= "CNTSCHID", data=stu_qqq_SG_clean,export=FALSE,name="pvread_bysch",folder=data_folder_path)

pvsciesch <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"),by= "CNTSCHID", data=stu_qqq_SG_clean,export=FALSE,name="pvscie_bysch",folder=data_folder_path)
```

The author then generated individual plots to display the distribution of mean Math, Reading and Science scores across schools.

The code chunks are as follows:

::: panel-tabset
## The Original plot

![](images/clipboard-1617135863.png)

The author had created a series of box plots across the 3 subjects to represent the subject scores by each school id (164 schools).

## The code

```{r}
#| eval: false

p2<- ggplot(pvmathsch, aes(x = as.factor(CNTSCHID), y = Mean)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=1.5) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    position = position_dodge(width = 0.75),
    color = "red"
  ) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD),
    width = 0.8,
    size=1,
    position = position_dodge(width = 10)
  ) +
  labs(title = "Math Scores by School") +
  ylab("Math Score") +
  xlab("School ID")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=100))+
  coord_flip() +
  theme_minimal(base_size=20)             
```
:::

### 3.2.1 Evaluation

+---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Assessment Criteria | Critique/Feedback                                                                                                                                                       | Possible Improvements                                                                                                                                                                                                                                                                    |
+=====================+=========================================================================================================================================================================+==========================================================================================================================================================================================================================================================================================+
| **Clarity**         | 1.  Graph is titled as “Subject Scores by school", however the code indicates that mean scores +/- one standard deviation were generated instead.                       | 1.  The subset can still be used, but the code will need to be changed for the revised visualization. This new visualization will retain the original intent to show the different mean scores for all the 164 schools in order to visualize the relative performance in the subjects.   |
|                     |                                                                                                                                                                         |                                                                                                                                                                                                                                                                                          |
|                     | 2.  The data subset used for this visualization only has 164 observations and 6 variables. This subset is basically the overall mean subject scores for each school.    |                                                                                                                                                                                                                                                                                          |
+---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Aesthetics**      | 1.  The use of a vertically long plot to compare the scores across schools makes it visually difficult compare differences between schools, and identify any clusters.  | 1.  To revise the design of a vertically long format and re-make a horizontally compact visualization, by using bubble plots.                                                                                                                                                            |
|                     |                                                                                                                                                                         |                                                                                                                                                                                                                                                                                          |
|                     | 2.  Since there are 164 schools, the use of a vertically long format makes it difficult to read the Y-axis labels.                                                      | 2.  To minimize axis labels, we can drop axis labels for school id, and only directly annotate the top & bottom 5 schools instead.                                                                                                                                                       |
|                     |                                                                                                                                                                         |                                                                                                                                                                                                                                                                                          |
|                     | 3.  The plot is patched side by side, resulting in the Y-axis being repeated 3 times. The order of the School IDs are all the same.                                     | 3.  To remove the 2 other repetitive Y-axes to minimize non-data ink.                                                                                                                                                                                                                    |
+---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Examining the subset used for the original plot in more detail.

```{r}
print(head(pvmathsch))
```

The *pvmathsch* subset table only has 164 observations and 6 variables.

::: callout-note
## Conclusion

The data subset can only be used to visualize the mean scores per school ID.

The original plot is not suitable to effectively help readers understand the disparity in performances between schools.

We will need to use a new compact visualization to enable the reader to quickly identify the disparity in school performance.
:::

### 3.2.2 Sketch of Proposed Design

Rough sketch of proposed design is shown below.

### 3.2.3 Remake

The original plot does not enable to reader to quickly capture information from the data points.

Therefore, I will use the same data set used by the author but design a new graph to improve on the original intention.

I will use the code below to re-make the original graph into Bubble plots for each subject. For this remake, I will employ color as a means to differentiate the mean scores.

I have also added reference lines to show the 10th and 90th percentile scores to easily identify the schools in those two opposite categories.

Lastly, I have also added annotations to help readers to quickly identify the top 5 and bottom 5 schools with the best and worst mean scores.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 8
#| fig-height: 6
#| column: body-outset-right


library(ggrepel)

# Identify the top 5 and bottom 5 schools
top_5 <- pvmathsch %>% 
  arrange(desc(Mean)) %>%
  slice(1:5)

bottom_5 <- pvmathsch %>% 
  arrange(Mean) %>%
  slice(1:5)

# Base plot with points colored by the mean score
p1 <- ggplot(pvmathsch, aes(x = CNTSCHID, y = Mean)) +
  geom_point(aes(color = Mean), alpha = 0.5, size = 7) +
  scale_color_gradient(low = "red", high = "green") +
  labs(title = "Mean Math Scores per School",
       subtitle = "5 Schools with the Best & Worst mean scores",
       x = "School ID",
       y = "Mean Math Scores") +
  theme_minimal() +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        panel.grid.major = element_blank())  # Remove major grid lines
       

# Annotate the top 5 and bottom 5 schools
p1 <- p1 +
  geom_text_repel(
    data = top_5, 
    aes(label = CNTSCHID, y = Mean), 
    color = "blue", 
    size = 3, 
    nudge_y = 12,   # Adjust nudge_y if necessary to move text up or down
    direction = "y"
  ) +
  geom_text_repel(
    data = bottom_5, 
    aes(label = CNTSCHID, y = Mean), 
    color = "blue", 
    size = 3, 
    nudge_y = -12,  # Adjust nudge_y if necessary to move text up or down
    direction = "y"
  )

# Calculate the 10th and 90th percentiles
percentile10 <- quantile(pvmathsch$Mean, probs = 0.10, na.rm = TRUE)
percentile90 <- quantile(pvmathsch$Mean, probs = 0.90, na.rm = TRUE)

# Add horizontal lines for the 10th and 90th percentiles to your plot
p1 <- p1 + 
  geom_hline(yintercept = percentile10, linetype = "dashed", color = "blue", size = 0.5) +
  geom_hline(yintercept = percentile90, linetype = "dashed", color = "blue", size = 0.5) +
  geom_text(aes(x = Inf, y = percentile10, label = paste("10th Percentile:", round(percentile10, 2))), 
            hjust = 1.05, vjust = 0, color = "blue", size = 3) +
  geom_text(aes(x = Inf, y = percentile90, label = paste("90th Percentile:", round(percentile90, 2))), 
            hjust = 1.05, vjust = 1, color = "blue", size = 3)

p1

```

::: callout-tip
## Revised Plot

The use of colour can help readers to quickly differentiate the scores between schools. \
\
I have annotated school IDs for the top and bottom 5 schools for readers to quickly identify the "best" and "worst" schools.

I have also added reference lines for the 10th and 90th Percentile. Here we can quickly see that while most of the 164 schools attain the same range of mean scores, there are a sizeable number of well-performing schools.

Annotating all the 164 school IDs will add too much ink to the plot. Hence, we can consider having another interactive plot (below) for a more detailed examination.
:::

For interactivity, I have used `ggplotly()` to convert this to an interactive graph. With the added interactivity, readers can use the tooltip function to gain more information on the data points.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

library(plotly)

# Convert to an interactive plot
ggplotly(p1, tooltip = c("x", "y"))
```

::: callout-note
## Note

Some of the previous annotations generated in the static plot may not appear after turning it into an interactive plot. Hence, we can use both static and interactive plots together if needed. For example, static charts to quickly summarize and communication information to reader, and an interactive charts for readers to drill down in more detail, eg zooming to certain segments, identifying specific data point details etc.
:::

## 3.3 Distribution of students’ performance in Math, Science and Reading by gender

The author had used the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package to obtain the Mean and Standard Deviation of PV values from “PV1MATH” to “PV10MATH”, “PV1READ” to “PV10READ” and “PV1SCIE” to “PV10SCIE” for each gender.

The code below was used to generate the composite PV values for Math, Reading and Science by gender.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

pvmathgenderonly <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"),c("ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvmath_bygenderonly",folder=data_folder_path)

pvreadgenderonly <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"),c("ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvread_bygenderonly",folder=data_folder_path)

pvsciegenderonly <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"),c("ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvscie_bygenderonly",folder=data_folder_path)
```

The author then generated individual plots to display the distribution of Math, Reading and Science scores by gender.

::: panel-tabset
## The Original plot

![](images/clipboard-3304529458.png)

The author had initiated a series of box plots across the 3 subjects to represent the subject scores by gender.

## The code

```{r}
#| eval: false

ggplot(pvmathgenderonly, aes(x = as.factor(ST004D01T), y = Mean,fill=ST004D01T)) +
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 5,
    aes(colour=ST004D01T),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    width = 0.5,
    size=0.8,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Math Scores by Gender") +
  ylab("Math Score") +
  xlab("Gender")+
  scale_y_continuous(limits = c(0, 1000), breaks = seq(0, 1000, by = 100))+
  scale_fill_discrete(name = "Gender") +
  scale_color_discrete(name = "Gender") +
  coord_flip() +
  theme_gray()
```
:::

### 3.3.1 Evaluation

+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Assessment Criteria | Critique/Feedback                                                                                                                                                                             | Possible Improvements                                                                                                                                                                                                                                                  |
+=====================+===============================================================================================================================================================================================+========================================================================================================================================================================================================================================================================+
| **Clarity**         | 1.  Graph is titled as “Subject Scores by Gender”, however the code indicates that mean scores +/- one standard deviation were generated instead.                                             | 1.  The code and subset used is not suitable to plot a range of scores for each gender across subjects. I will extract a new subset for the revised visualization. This will plot the distribution and range of scores for the different genders across all subjects.  |
|                     |                                                                                                                                                                                               |                                                                                                                                                                                                                                                                        |
|                     | 2.  The data subset used for the plot only has 2 observations and 6 variables. This subset is actually the overall mean score for each gender across the subjects.                            | 2.  The new visualization will need to enable readers to quickly differentiate the performance between genders across subjects.                                                                                                                                        |
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Aesthetics**      | 1.  The graphs are already well labelled in the x and y axes, and identifies the different genders clearly. The use of different colors per gender together with the legend is not necessary. | 1.  To remove either the legend since there are only two categories of gender and they are already differentiated by colour.                                                                                                                                           |
|                     |                                                                                                                                                                                               |                                                                                                                                                                                                                                                                        |
|                     | 2.  The scale for the X-axis is from 0 to 1000, in increments of 50. Because of the “lack of range” in the mean scores, the plot appears too elongated.                                       | 2.  Shorten the X-axis, or extract new data points to correctly populate the range of scores.                                                                                                                                                                          |
|                     |                                                                                                                                                                                               |                                                                                                                                                                                                                                                                        |
|                     | 3.  Unable to decipher the actual mean scores even with the granularity in X-axis tick marks.                                                                                                 | 3.  To annotate the mean scores onto the plot, so that we can remove the background grid lines and X-axis tick marks and reduce non-data ink.                                                                                                                          |
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

::: callout-note
## Observation

upon closer examination of the code below, the author had included an error bar with Mean +/- one standard deviation.

```{r}
#geom_errorbar(
    #aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    #width = 0.5,
    #size=0.8,
    #position = position_dodge(width = 0.5)
```

The original data set and plot is instead comparing the mean subject scores across different genders.
:::

Examining the subset used for the original plot in more detail.

```{r}
print(pvmathgenderonly)
```

The *pvmathgenderonly* data set only has 2 observations and 6 variables.

::: callout-note
## Conclusion

This data set can only be used to compare the mean scores for genders across the 3 subjects.

The visualization needs to be done differently to enable the reader to obtain more information regarding the performance between genders.

I will extract a new subset and create new graphs to show the range and distribution of scores between the genders across subjects.

I will use PV1 scores which are available for all students to create new plots to visualize the distribution of scores.
:::

### 3.3.2 Sketch of Proposed Design

Rough sketch of proposed design is shown below.

### 3.3.3 Remake

The original plot is unable to exhibit the full range and distribution of subject scores across genders.

Therefore, I will extract data from the original data set to create new subsets for the new plots using the code below.

In terms of data, I will use the PV1 scores which are available for all students.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

# Create a subset of the data with gender and PV1 score columns
subset_gender_PV1 <- stu_qqq_SG %>%
  select(ST004D01T, PV1MATH, PV1SCIE, PV1READ)

# Convert the "ST004D01T" column to a factor 
subset_gender_PV1$ST004D01T <- factor(subset_gender_PV1$ST004D01T, levels = c(1, 2), labels = c("Female", "Male"))

Math_gender <- subset_gender_PV1 %>%
  group_by(ST004D01T) %>%  # Group by gender column
  summarise(
    Freq = n(),             # Count the frequency of each gender
    Mean = mean(PV1MATH, na.rm = TRUE)  # Calculate the mean of PV1MATH, removing NA values
  )

Read_gender <- subset_gender_PV1 %>%
  group_by(ST004D01T) %>%  # Group by gender column
  summarise(
    Freq = n(),             # Count the frequency of each gender
    Mean = mean(PV1READ, na.rm = TRUE)  # Calculate the mean of PV1READ, removing NA values
  )

SCIE_gender <- subset_gender_PV1 %>%
  group_by(ST004D01T) %>%  # Group by gender column
  summarise(
    Freq = n(),             # Count the frequency of each gender
    Mean = mean(PV1SCIE, na.rm = TRUE)  # Calculate the mean of PV1SCIE, removing NA values
  )
```

Next, I will use the code below to create new box plots for each subject. This will show the range of scores for the genders.

```{r}
#| code-fold: true
#| code-summary: "Show the code"


# Create the plot using the subset_data
bxp1 <- ggplot(subset_gender_PV1, aes(x = ST004D01T, y = PV1MATH, fill = ST004D01T)) +
  geom_boxplot() +
  coord_cartesian(ylim = c(0, 1000)) +
  geom_point(data = Math_gender, aes(x = ST004D01T, y = Mean), color = "blue", size = 1.5) +
  geom_text(data = Math_gender, 
          aes(x = ST004D01T, y = Mean, label = paste("Mean:", round(Mean, 2))), 
          color = "black", hjust = -0.2, vjust =4, size = 2.75) +
  labs(x = "Gender",
       y = "Math Scores") +
  scale_fill_manual(values = c("Female" = "lightblue", "Male" = "lightblue")) +  
  theme_minimal() +
  theme(legend.position = "none") 


bxp2 <- ggplot(subset_gender_PV1, aes(x = ST004D01T, y = PV1READ, fill = ST004D01T)) +
  geom_boxplot() +
  coord_cartesian(ylim = c(0, 1000)) +
  geom_point(data = Read_gender, aes(x = ST004D01T, y = Mean), color = "blue", size = 1.5) +
  geom_text(data = Math_gender, 
          aes(x = ST004D01T, y = Mean, label = paste("Mean:", round(Mean, 2))), 
          color = "black", hjust = -0.2, vjust = 4.25, size = 2.75) +
  labs(x = "Gender",
       y = "Reading Scores") +
  scale_fill_manual(values = c("lightgreen", "lightgreen")) +  # Associate colors with factor levels
  theme_minimal() +
  theme(legend.position = "none") 
  

bxp3 <- ggplot(subset_gender_PV1, aes(x = ST004D01T, y = PV1SCIE, fill = ST004D01T)) +
  geom_boxplot() +
  coord_cartesian(ylim = c(0, 1000)) +
  geom_point(data = SCIE_gender, aes(x = ST004D01T, y = Mean), color = "blue", size = 1.5) +
  geom_text(data = Math_gender, 
          aes(x = ST004D01T, y = Mean, label = paste("Mean:", round(Mean, 2))), 
          color = "black", hjust = -0.2, vjust = 4, size = 2.75) +
  labs(x = "Gender",
       y = "Science Scores") +
  scale_fill_manual(values = c("lightpink", "lightpink")) +  # Associate colors with factor levels
  theme_minimal() +
  theme(legend.position = "none") 
  
```

Besides, showing the differences in performance using box plots, I will also plot ridgeline plots, segmented into 4 quantiles, to display the distribution and difference in subject scores between genders across the subjects.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

rp1 <- ggplot(subset_gender_PV1,
       aes(x = PV1MATH, 
           y = ST004D01T, 
           fill = factor(stat(quantile))
           )) +
  stat_density_ridges(
    geom = "density_ridges_gradient",
    calc_ecdf = TRUE, 
    quantiles = 4,
    quantile_lines = TRUE) +
  scale_fill_viridis_d(name = "Quartiles") +
  scale_x_continuous(
    name = NULL,
    expand = c(0, 0)
    ) +
  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +
  theme_ridges() +
  theme(legend.position = "none",
        plot.title = element_text(size = 10)  
  )  +
  labs(title = "Math Scores\nacross genders")

rp2 <- ggplot(subset_gender_PV1,
       aes(x = PV1READ, 
           y = ST004D01T, 
           fill = factor(stat(quantile))
           )) +
  stat_density_ridges(
    geom = "density_ridges_gradient",
    calc_ecdf = TRUE, 
    quantiles = 4,
    quantile_lines = TRUE) +
  scale_fill_viridis_d(name = "Quartiles") +
  scale_x_continuous(
    name = NULL,
    expand = c(0, 0)
    ) +
  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +
  theme_ridges() +
  theme(legend.position = "none",
        plot.title = element_text(size = 10)  
  )  +
  labs(title = "Reading Scores \nacross genders")

rp3 <- ggplot(subset_gender_PV1,
       aes(x = PV1SCIE, 
           y = ST004D01T, 
           fill = factor(stat(quantile))
           )) +
  stat_density_ridges(
    geom = "density_ridges_gradient",
    calc_ecdf = TRUE, 
    quantiles = 4,
    quantile_lines = TRUE,
    alpha = 0.5 ) +
  scale_fill_viridis_d(name = "Quartiles") +
  scale_x_continuous(
    name = NULL,
    expand = c(0, 0)
    ) +
  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +
  theme_ridges() +
  theme(legend.position = "none",
        plot.title = element_text(size = 10)  
  ) +
  labs(title = "Science Scores\nacross genders")
```

I will use the code below to create a composite graph.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 8
#| fig-height: 10
#| column: body-outset-right


patch3 <- (rp1+ bxp1)/(rp2+bxp2)/(rp3+bxp3) + 
              plot_annotation(
                title = "Male students outperform in Maths and Science",
                subtitle = "Female students outperform in Reading")

patch3 & theme(panel.grid.major = element_blank(),)
```

::: callout-tip
## Revised Plot

The revised plot consists of a patchwork of ridgeline plots and box plots for each subject.

The ridgeline plot been further segmented into 4 quantiles, differentiated by colour. This not only provides insights into the distribution of the scores but also enables readers to quickly the differences in performance.

The box plots, further help readers to visualize the differences in scores between genders. The range of scores can be see along with the mean scores.
:::

## 3.4 Distribution of Math, Reading and Science scores by socioeconomic status

The author had previously created a new variable, “ESCS_recoded”, which bins the socio-economic (ESCS) score into four quantiles - “Very Low”, “Low”, “Medium” and “High”. The author had used the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package to obtain the Mean and Standard Deviation of PV values from “PV1MATH” to “PV10MATH”, “PV1READ” to “PV10READ” and “PV1SCIE” to “PV10SCIE” and grouped by the ESCS.

The code below was used to generate the composite PV values for Math, Reading and Science.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

pvmathescs <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"),c("ESCS_recoded"), data=stu_qqq_SG_clean,export=FALSE,name="pvmathescs",folder=data_folder_path)

pvreadescs <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"),c("ESCS_recoded"), data=stu_qqq_SG_clean,export=FALSE,name="pvreadescs",folder=data_folder_path)

pvscieescs <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"),c("ESCS_recoded"), data=stu_qqq_SG_clean,export=FALSE,name="pvscieescs",folder=data_folder_path)
```

The author then used the below code to generate individual plots to display the distribution of Math, Reading and Science scores across schools by socioeconomic status.

::: panel-tabset
## The Original plot

![](images/clipboard-1075189504.png)

The author had created a series of box plots across the 3 subjects to represent the mean scores by the 4 binned categories of the ESCS score (High, Medium, Low, Very Low.

## The code

```{r}
#| eval: false

ggplot(pvscieescs, aes(x = ESCS_recoded, y = Mean,fill=ESCS_recoded))+
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.5),lwd=0.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 10,
    size = 2,
    aes(colour=ESCS_recoded),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ESCS_recoded),
    width = 0.5,
    size=1,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Science Scores by Socioeconomic Status") +
  ylab("Science Score") +
  xlab("Socioeconomic Status")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=200))+
  coord_flip() +
  theme_minimal(base_size=10)

```
:::

### 3.4.1 Evaluation

+---------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Assessment Criteria | Critique/Feedback                                                                                                                                                                     | Possible Improvements                                                                                                                                                          |
+=====================+=======================================================================================================================================================================================+================================================================================================================================================================================+
| **Clarity**         | 1.  Graph is titled as “Subject Scores by Socioeconomic Status”, however the code indicates that mean scores +/- one standard deviation were generated instead.                       | 1.  The code and subset used is not suitable to plot a range or distribution of scores for each ESCS score category.                                                           |
|                     |                                                                                                                                                                                       |                                                                                                                                                                                |
|                     | 2.  The data subset used for the plots only has 4 observations and 6 variables. It is actually just the overall mean scores for each of the newly binned ESCS score category.         | 2.  I will extract a new subset for the revised visualization. This will plot the relationship between the two original continuous variables (subject scores and ESCS score).  |
|                     |                                                                                                                                                                                       |                                                                                                                                                                                |
|                     |                                                                                                                                                                                       | 3.  The new visualization will need to enable readers to quickly infer the relationships between subject scores and socioeconomic statuses.                                    |
+---------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Aesthetics**      | 1.  The axes are already well labelled in and identifies the different socioeconomic segments clearly, the use of different colors per segment together with legend is not necessary. | 1.  To remove the legend since they are already differentiated by colour and identifiable through the Y-axis labels.                                                           |
|                     |                                                                                                                                                                                       |                                                                                                                                                                                |
|                     | 2.  The scale for the X-axis is from 0 to 1000, in increments of 50. Because of the “lack of range” in the mean scores, the plot appears too elongated.                               | 2.  Shorten the X-axis, or extract new data points to correctly populate the range of scores.                                                                                  |
|                     |                                                                                                                                                                                       |                                                                                                                                                                                |
|                     | 3.  Even with the background grid lines and X axis tick marks, I am unable to decipher the actual mean scores clearly.                                                                | 3.  To annotate the mean scores onto the plot, so that we can remove the background grid lines and X-axis tick marks and reduce non-data ink.                                  |
+---------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

::: callout-note
## Observation

Upon closer examination of the code below, the author had included an error bar with Mean +/- one standard deviation.

```{r}
#geom_errorbar(
    #aes(ymin = Mean - SD, ymax = Mean + SD,color=ESCS_recoded),
    #width = 0.5,
    #size=1,
    #position = position_dodge(width = 0.5)
```

This plot can only be used to compare the mean subject scores across different groupings of ESCS score.
:::

Examining the subset used for the original plot in more detail.

```{r}
print(pvscieescs)
```

The data subset used for the plots only has 4 observations and 6 variables.

::: callout-note
## Conclusion

This subset and the code used is not able to plot the range of scores per ESCS segment, and can only be used to compare the mean scores across the 4 quantiles.

Although this subset and plots is sufficient to compare the mean subject scores between the different ESCS categories, a different set of data and visualizations can be used to communicate more information about the relationship between subject scores and socioeconomic statuses.
:::

Additionally, the **binning** of the ESCS score, while helpful may be limited in usefulness, for the following reasons:-

-   Binning the ESCS scores adds in an element of subjectivity. For example, why should there be 4 segments of socioeconomic statuses instead of 3, or 6?

-   Could the number of socioeconomic segments be applicable for other countries? For example, would a "Low segment" in Singapore be equivalent to a "Low segment" in another country?

### 3.4.2 Sketch of Proposed Design

Rough sketch of proposed design is shown below.

### 3.4.4 Remake

Instead of binning the ESCS score and effectively transforming to a categorical type, I would prefer to keep this as a continuous variable.

I will use scatter plots to visualize the relationships between the socioeconomic statuses and subject scores.

Drawing inspiration from Prof Kam's [Lesson 3](https://isss608-ay2023-24jan.netlify.app/outline/lesson03_outline) and well as additional useful references, I will proceed to plot [Scatter plots with Marginal Histograms.](https://things-about-r.tumblr.com/post/124004085689/scatter-plots-with-marginal-densities-an-example)

In terms of data, I will use the PV1 scores which are available for all students.

For this visualization, I will use the [ggstatplot package](https://cran.r-project.org/web/packages/ggstatsplot/index.html). [@patil2021]

For more information on this package and how it can be used to create graphics from statistical tests included in the plots themselves, please [refer to this link.](https://joss.theoj.org/papers/10.21105/joss.03167)

```{r}
library(ggstatsplot)
```

Creating new data subset for visualization.

```{r}
subset_ESCS_PV1 <- stu_qqq_SG %>%
  select(ESCS, PV1MATH, PV1SCIE, PV1READ)

#omiting NA values
subset_ESCS_PV1 <- na.omit(subset_ESCS_PV1)
```

We will use the code below from `ggstatplot package` to generate the plot.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 8
#| fig-height: 6
#| column: body-outset-right

ggscatterstats(
  data = subset_ESCS_PV1,                                          
  x = ESCS,                                                  
  y = PV1MATH,
  xlab = "Socioeconomic score (ESCS)",
  ylab = "Math scores",
  marginal = TRUE,
  marginal.type = "histogram",
  centrality.para = "mean",
  margins = "both",
  title = "Relationship between Socio-economic and Math scores",
  messages = FALSE
)
```

::: callout-tip
## Revised Plot

The benefit of this plot is that it shows both the correlation between the two variables as well as their respective distributions, and includes important statictics like the Pearson coefficient.

From the plot above, the pearson coefficient of 0.42 indicates that there is a weak positive relationship between ESCS scores and Math scores.

The marginal histograms for both variables enables readers to additional infer the distribution of these variables. For example, Math scores resemble a normal distribution, while ESCS scores resemble a left-skewed distribution.
:::

## 3.5 Distribution of students’ performance in Math, Science and Reading by gender across schools

The author had intended to analyse whether there are differences in performances in Math, Reading and Science between genders at a more granular level - within schools.

The author had use the [pisa.mean.pv](https://www.rdocumentation.org/packages/intsvy/versions/2.8/topics/pisa.mean.pv) function from [intsvy](https://daniel-caro.com/r-intsvy) package to obtain the Mean and Standard Deviation of PV values from “PV1MATH” to “PV10MATH”, “PV1READ” to “PV10READ” and “PV1SCIE” to “PV10SCIE” for each school and by gender.

The below code was used to generate the composite PV values.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

pvmathgender <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"MATH"),c("CNTSCHID","ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvmath_bygender",folder=data_folder_path)

pvreadgender <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"READ"),c("CNTSCHID","ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvread_bygender",folder=data_folder_path)

pvsciegender <- pisa.mean.pv(pvlabel=paste0("PV",1:10,"SCIE"),by= c("CNTSCHID","ST004D01T"), data=stu_qqq_SG_clean,export=FALSE,name="pvscie_bygender",folder=data_folder_path)
```

The author then created individual plots to display the distribution of Math, Reading and Science scores across schools by gender, using the code below.

::: panel-tabset
## The Original Plot

![](images/clipboard-2922052911.png)

The author had created a series of box plots across the 3 subjects to represent the subject scores for each gender for all schools (164 schools).

## The code

```{r}
#| eval: false

p8<- ggplot(pvmathgender, aes(x = as.factor(CNTSCHID), y = Mean,fill=ST004D01T))+
  geom_boxplot(width = 0.5, position = position_dodge(width = 0.75),lwd=1.5,show.legend=FALSE) +
  stat_summary(
    fun = mean,
    geom = "point",
    shape = 18,
    size = 10,
    aes(colour=ST004D01T),
    position = position_dodge(width = 0.75)) +
  geom_errorbar(
    aes(ymin = Mean - SD, ymax = Mean + SD,color=ST004D01T),
    width = 1,
    size=2,
    position = position_dodge(width = 0.5)
  ) +
  labs(title = "Math Scores by Gender across Schools") +
  ylab("Math Score") +
  xlab("School ID")+
  scale_y_continuous(limits=c(0,1000),breaks = seq(0, 1000, by=200))+
  coord_flip() +
  theme_minimal(base_size=50)+
  theme(legend.position="none")

```
:::

### 3.5.1 Evaluation

+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Assessment Criteria | Critique/Feedback                                                                                                                                                                             | Possible Improvements                                                                                                                                                                                                                                        |
+=====================+===============================================================================================================================================================================================+==============================================================================================================================================================================================================================================================+
| **Clarity**         | 1.  Graph is titled as “Subject Scores by Gender across school", however the code indicates that mean scores +/- one standard deviation were generated instead.                               | 1.  Previous visualization had already analysed the differences per school. However, to further make it more granular by introducing gender, does not seem to further value-add any insight.                                                                 |
|                     |                                                                                                                                                                                               |                                                                                                                                                                                                                                                              |
|                     | 2.  The data subset used for this visualization has 301 observations and 7 variables. This subset is basically the overall mean subject scores for male and female students per school        | 2.  If granularity is desired, we can retain the original intent to show the difference in performance for the schools, but instead of gender, concentrate on the examining the actual disparity between the best and the worst schools instead.             |
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Aesthetics**      | 1.  The use of a vertically long plot to compare the scores across schools makes it visually difficult compare differences between schools, and identify any clusters.                        | 1.  I will re-make a horizontally compact visualization, by using ridgeline plots to show the differences in performance only between the best and worst schools. The idea of plotting the performance of genders for each and every school will be shelved. |
|                     |                                                                                                                                                                                               |                                                                                                                                                                                                                                                              |
|                     | 2.  Since there are 164 schools, the use of a vertically long format makes it difficult to read the Y-axis labels. This is further compounded with the splitting of genders for every school. |                                                                                                                                                                                                                                                              |
|                     |                                                                                                                                                                                               |                                                                                                                                                                                                                                                              |
|                     | 3.  The plot is patched side by side, resulting in the Y-axis being repeated 3 times. The order of the School IDs are all the same.                                                           |                                                                                                                                                                                                                                                              |
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Examining the subset used for the original plot in more detail.

```{r}
print(head(pvmathgender))
```

The *pvmathgender* subset table has 307 observations and 7 variables.

::: callout-note
## Conclusion

The data subset can only be used to visualize the mean scores of the two genders for every school.

However, because of its long format, the original plot is not suitable to effectively help readers understand the disparity in performances between schools. By adding a further split into genders per school further complicates this visually.

As there is no value add to this direction, I will instead use a new compact visualization to enable the reader to quickly identify the disparity in school performance. Instead of analyzing all schools, we can narrow our focus just to the "best" and "worst" schools.
:::

### 3.5.2 Sketch of Proposed Design

Rough sketch of proposed design is shown below.

### 3.5.3 Remake

The author had previously extracted the mean scores per school across the 3 subjects. I will use the same sub sets to extract the top and bottom 5 School IDs for each subject.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

# Identify the top and bottom 5 schools
top_bottom_math <- pvmathsch %>%
  arrange(Mean) %>%
  slice(c(1:5, (n()-4):n())) %>%
  pull(CNTSCHID)

top_bottom_read <- pvreadsch %>%
  arrange(Mean) %>%
  slice(c(1:5, (n()-4):n())) %>%
  pull(CNTSCHID)

top_bottom_scie <- pvsciesch %>%
  arrange(Mean) %>%
  slice(c(1:5, (n()-4):n())) %>%
  pull(CNTSCHID)

```

Next I will filter the data set and obtain PV1 student scores from the top and bottom 5 schools only.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

# Filter the original dataset to include only the selected schools

top_bottom_mathsch <- stu_qqq_SG %>%
  filter(CNTSCHID %in% top_bottom_math)

top_bottom_readsch <- stu_qqq_SG %>%
  filter(CNTSCHID %in% top_bottom_read)

top_bottom_sciesch <- stu_qqq_SG %>%
  filter(CNTSCHID %in% top_bottom_scie)


top_bottom_mathsch <- top_bottom_mathsch %>%
  mutate(CNTSCHID = factor(CNTSCHID, levels = top_bottom_math))
```

Lastly, I will use the code below to plot Ridgeline plots for the top and bottom 5 schools.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

math_5 <- ggplot(top_bottom_mathsch, aes(x = PV1MATH, y = factor(CNTSCHID), fill = after_stat(x))) +
  stat_density_ridges(
    geom = "density_ridges_gradient",
    calc_ecdf = TRUE, 
    quantiles = 4,
    quantile_lines = TRUE) +
  scale_fill_gradientn(
    name = "Math Scores",
    colors = c("red", "green"),
    limits = c(min(top_bottom_mathsch$PV1MATH, na.rm = TRUE), max(top_bottom_mathsch$PV1MATH, na.rm = TRUE)),
    breaks = seq(min(top_bottom_mathsch$PV1MATH, na.rm = TRUE), max(top_bottom_mathsch$PV1MATH, na.rm = TRUE), length.out = 5)
  ) +
  coord_cartesian(xlim=c(0,1000)) +
  theme_ridges() +
  theme(legend.position = "none",
        plot.title = element_text(size = 10)  
  )  +
  labs(y = "School ID", x = NULL, title = "Math Scores for the Top and Bottom 5 Schools") +
  theme(
    axis.text.y = element_text(angle = 0, hjust = 0.5)  
  )


math_5

      
```

::: callout-tip
## Revised plot

By narrowing our focus on only the top and bottom 5 schools, we are able to clearly infer the actual difference between the "best" and "worst" schools.

The new revised plot is now more visually compact, and allows readers to quickly identify the top and bottom 5 schools and their relative performances.
:::
